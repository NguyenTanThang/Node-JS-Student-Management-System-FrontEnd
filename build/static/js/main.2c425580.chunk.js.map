{"version":3,"sources":["config/routes.js","utils/userGetter.js","components/partial/Navbar.js","actions/types.js","components/partial/Logout.js","actions/userActions.js","components/main/Home.js","actions/studentActions.js","actions/teacherActions.js","actions/adminActions.js","components/partial/MessageAlert.js","actions/messageActions.js","components/profile/ChangePassword.js","actions/classActions.js","components/class/AddClassForm.js","utils/dateParser.js","components/class/ClassItem.js","utils/paginate.js","components/partial/Pagination.js","components/class/ListOfClasses.js","components/class/EditClassForm.js","components/student/StudentItem.js","components/teacher/TeacherItem.js","components/class/ClassDetail.js","components/student/AddStudentForm.js","components/student/EditStudentForm.js","components/student/StudentList.js","components/student/StudentLoginForm.js","components/student/StudentDetail.js","components/teacher/AddTeacherForm.js","components/teacher/EditTeacherForm.js","components/teacher/TeacherList.js","components/teacher/TeacherLoginForm.js","components/teacher/TeacherDetail.js","components/admin/AdminItem.js","components/admin/AdminList.js","components/admin/AdminLoginForm.js","components/admin/AdminSignUpForm.js","App.js","serviceWorker.js","reducers/adminReducer.js","reducers/messageReducer.js","reducers/studentReducer.js","reducers/teacherReducer.js","reducers/userReducer.js","reducers/classReducer.js","reducers/rootReducer.js","config/store.js","index.js"],"names":["MAIN_PROXY_URL","allStudentsURL","getStudentByIDURL","student_id","getStudentByClassNameURL","class_name","addStudentURL","studentLoginURL","allTeachersURL","getTeacherByIDURL","teacher_id","getTeacherByClassNameURL","addTeacherURL","teacherLoginURL","allAdminsURL","getAdminByIDURL","admin_id","addAdminURL","adminLoginURL","allClassesURL","getClassByIDURL","class_id","addClassURL","userGetter","user_id","a","user","undefined","axios","get","res","data","Navbar","state","localStorage","getItem","this","setState","role","assigned_classroom","logoutNavLink","className","to","teacherNavLinks","studentNavLinks","adminNavLinks","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","SET_MESSAGE","Logout","props","userLogout","history","push","window","location","reload","connect","dispatch","Home","deleteStudent","deletedStudent","delete","_id","success","message","student","payload","msg_type","response","deleteTeacher","deletedTeacher","teacher","adminLogin","adminAccount","post","token","date","Date","now","MessageAlert","setTimeout","clearMessage","renderedMessage","messageReducer","ChangePassword","old_password","new_password","onChange","e","target","value","onSubmit","preventDefault","studentChangePassword","teacherChangePassword","adminChangePassword","placeholder","name","required","updatedStudentID","oldPassword","newPassword","put","updatedTeacherID","updatedAdminID","admin","getAllClasses","classes","console","log","AddClassForm","onCreateClass","addClass","minLength","maxLength","newClass","classItem","mS","dateParser","dateItem","parsedDate","parse","dateObject","y","getFullYear","m","getMonth","d","getDate","length","dateParserWithMonth","ClassItem","deleteClass","created_date","onClick","deletedClassID","paginate","totalItems","startPage","endPage","currentPage","pageSize","maxPages","totalPages","Math","ceil","maxPagesBeforeCurrentPage","floor","maxPagesAfterCurrentPage","startIndex","endIndex","min","pages","Array","from","keys","map","i","Pagination","pageObject","changeCurrentPage","arrayOfPageLinks","page","key","ListOfClasses","searched_classname","pageNum","classList","filter","item","toLowerCase","includes","classItems","slice","classReducer","EditClassForm","class_item","editClass","match","params","updatedClass","StudentItem","studentItem","dob","buttons","TeacherItem","teacherItem","ClassDetail","students","studentList","AddStudentForm","phone_number","address","email","password","onAddStudent","addStudent","index","method","defaultValue","disabled","newStudent","EditStudentForm","student_item","onEditStudent","editStudent","selected","assignedClassroomInput","updatedStudent","StudentList","searched_name","getAllStudents","studentItems","studentReducer","StudentLoginForm","onStudentLogin","studentLogin","studentAccount","StudentDetail","AddTeacherForm","onAddTeacher","addTeacher","newTeacher","EditTeacherForm","teacher_item","onEditTeacher","editTeacher","updatedTeacher","TeacherList","getAllTeachers","teacherList","teachers","teacherItems","teacherReducer","TeacherLoginForm","onTeacherLogin","teacherLogin","teacherAccount","TeacherDetail","AdminItem","adminItem","verified","AdminList","getAllAdmins","adminList","admins","adminReducer","AdminLoginForm","onAdminLogin","AdminSignUpForm","addAdmin","newAdmin","App","path","component","exact","ClassList","StudentDetails","Boolean","hostname","initialState","action","userReducer","setItem","removeItem","concat","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.2c425580.chunk.js","sourcesContent":["//const MAIN_PROXY_URL = \"https://node-js-sms-backend-123.herokuapp.com\";\r\nconst MAIN_PROXY_URL = \"http://localhost:5000\";\r\n\r\nexport const allStudentsURL = `${MAIN_PROXY_URL}/students`;\r\nexport const getStudentsByNameURL = (student_name) => {\r\n    return `${MAIN_PROXY_URL}/students?student_name=${student_name}`\r\n}\r\nexport const getStudentByIDURL = (student_id) => {\r\n    return `${MAIN_PROXY_URL}/students/${student_id}`\r\n}\r\nexport const getStudentByClassNameURL = (class_name) => {\r\n    return `${MAIN_PROXY_URL}/students/class_name/${class_name}`\r\n}\r\nexport const addStudentURL = `${MAIN_PROXY_URL}/students/add`;\r\nexport const getEditStudentURL = (student_id) => {\r\n    return `${MAIN_PROXY_URL}/students/edit/${student_id}`\r\n}\r\nexport const getDeleteStudentURL = (student_id) => {\r\n    return `${MAIN_PROXY_URL}/students/delete/${student_id}`\r\n}\r\nexport const studentLoginURL = `${MAIN_PROXY_URL}/students/login`\r\nexport const getStudentChangePasswordURL = (student_id) => {\r\n    return `${MAIN_PROXY_URL}/students/change_password/${student_id}`\r\n}\r\n\r\n\r\n\r\nexport const allTeachersURL = `${MAIN_PROXY_URL}/teachers`;\r\nexport const getTeachersByNameURL = (teacher_name) => {\r\n    return `${MAIN_PROXY_URL}/teachers?teacher_name=${teacher_name}`\r\n}\r\nexport const getTeacherByIDURL = (teacher_id) => {\r\n    return `${MAIN_PROXY_URL}/teachers/${teacher_id}`\r\n}\r\nexport const getTeacherByClassNameURL = (class_name) => {\r\n    return `${MAIN_PROXY_URL}/teachers/class_name/${class_name}`\r\n}\r\nexport const addTeacherURL = `${MAIN_PROXY_URL}/teachers/add`;\r\nexport const getEditTeacherURL = (teacher_id) => {\r\n    return `${MAIN_PROXY_URL}/teachers/edit/${teacher_id}`\r\n}\r\nexport const getDeleteTeacherURL = (teacher_id) => {\r\n    return `${MAIN_PROXY_URL}/teachers/delete/${teacher_id}`\r\n}\r\nexport const teacherLoginURL = `${MAIN_PROXY_URL}/teachers/login`\r\nexport const getTeacherChangePasswordURL = (teacher_id) => {\r\n    return `${MAIN_PROXY_URL}/teachers/change_password/${teacher_id}`\r\n}\r\n\r\n\r\n\r\nexport const allAdminsURL = `${MAIN_PROXY_URL}/admins`;\r\nexport const getAdminByIDURL = (admin_id) => {\r\n    return `${MAIN_PROXY_URL}/admins/${admin_id}`\r\n}\r\nexport const addAdminURL = `${MAIN_PROXY_URL}/admins/add`;\r\nexport const getEditAdminURL = (admin_id) => {\r\n    return `${MAIN_PROXY_URL}/admins/edit/${admin_id}`\r\n}\r\nexport const adminLoginURL = `${MAIN_PROXY_URL}/admins/login`\r\nexport const getAdminChangePasswordURL = (admin_id) => {\r\n    return `${MAIN_PROXY_URL}/admins/change_password/${admin_id}`\r\n}\r\n\r\n\r\nexport const allClassesURL = `${MAIN_PROXY_URL}/classes`;\r\nexport const getClassesByNameURL = (class_name) => {\r\n    return `${MAIN_PROXY_URL}/classes?class_name=${class_name}`\r\n}\r\nexport const getClassByIDURL = (class_id) => {\r\n    return `${MAIN_PROXY_URL}/classes/${class_id}`\r\n}\r\nexport const addClassURL = `${MAIN_PROXY_URL}/classes/add`;\r\nexport const getEditClassURL = (class_id) => {\r\n    return `${MAIN_PROXY_URL}/classes/edit/${class_id}`\r\n}\r\nexport const getDeleteClassURL = (class_id) => {\r\n    return `${MAIN_PROXY_URL}/classes/delete/${class_id}`\r\n}","import axios from \"axios\";\r\nimport {\r\n    getTeacherByIDURL,\r\n    getStudentByIDURL,\r\n    getAdminByIDURL\r\n} from \"../config/routes\";\r\n\r\nexport const userGetter = async (user_id) => {\r\n    let user = null;\r\n\r\n    if (user_id == null || user_id == undefined){\r\n        return {};\r\n    }\r\n\r\n    let res = await axios.get(getTeacherByIDURL(user_id));\r\n    user = res.data.data;\r\n\r\n    if (user == null) {\r\n        let res = await axios.get(getStudentByIDURL(user_id));\r\n        user = res.data.data;\r\n    }\r\n\r\n    if (user == null) {\r\n        let res = await axios.get(getAdminByIDURL(user_id));\r\n        user = res.data.data;\r\n    }\r\n\r\n    return user;\r\n}","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\n\r\nclass Navbar extends Component {\r\n\r\n    state = {\r\n        user: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const user_id = localStorage.getItem(\"user_id\")\r\n        let user = {};\r\n\r\n        user = await userGetter(user_id)\r\n\r\n        this.setState({\r\n            user\r\n        })\r\n    }\r\n\r\nrender() {\r\n    const {role, assigned_classroom} = this.state.user;\r\n    const user_id = localStorage.getItem(\"user_id\")\r\n\r\n    const logoutNavLink = user_id === null || user_id === undefined ? (\r\n        <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/\">Login</Link>\r\n        </li>\r\n    ) : (\r\n        <>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to=\"/change-password\">Change Password</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link text-danger\" to=\"/logout\">Logout</Link>\r\n            </li>\r\n        </>\r\n    )\r\n\r\n    const teacherNavLinks = role === \"teacher\" ? (\r\n        <>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to={`/teachers/details/${user_id}`}>Profile</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to={`/teachers/edit/${user_id}`}>Update Profile</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to={`/classes/details/${assigned_classroom}`}>Your Class</Link>\r\n            </li>\r\n        </>\r\n    ) : (\"\")\r\n\r\n    const studentNavLinks = role === \"student\" ? (\r\n        <>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to={`/students/details/${user_id}`}>Profile</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to={`/students/edit/${user_id}`}>Update Profile</Link>\r\n            </li>\r\n        </>\r\n    ) : (\"\")\r\n\r\n    const adminNavLinks = role === \"admin\" ? (\r\n        <>\r\n        <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/classes\">Classes</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/students\">Students</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/teachers\">Teachers</Link>\r\n        </li>\r\n        </>\r\n    ) : (\"\")\r\n\r\nreturn (\r\n<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n<div className=\"container\"> \r\n    <h1 className=\"navbar-brand\">\r\n        CMS System\r\n    </h1>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n            \r\n            {teacherNavLinks}\r\n            {studentNavLinks}\r\n            {adminNavLinks}\r\n            {logoutNavLink}\r\n            \r\n        </ul>\r\n    </div>\r\n    </div>\r\n</nav>\r\n)\r\n}\r\n}\r\n\r\nexport default Navbar;","export const GET_ALL_STUDENTS = \"GET_ALL_STUDENTS\"\r\nexport const GET_STUDENT_BY_ID = \"GET_STUDENT_BY_ID\"\r\nexport const GET_STUDENTS_BY_NAME = \"GET_STUDENTS_BY_NAME\"\r\nexport const ADD_STUDENT = \"ADD_STUDENT\"\r\nexport const EDIT_STUDENT = \"EDIT_STUDENT\"\r\nexport const DELETE_STUDENT = \"DELETE_STUDENT\"\r\nexport const STUDENT_CHANGE_PASSWORD = \"STUDENT_CHANGE_PASSWORD\"\r\n\r\nexport const GET_ALL_TEACHERS = \"GET_ALL_TEACHERS\"\r\nexport const GET_TEACHER_BY_ID = \"GET_TEACHER_BY_ID\"\r\nexport const GET_TEACHERS_BY_NAME = \"GET_TEACHERS_BY_NAME\"\r\nexport const ADD_TEACHER = \"ADD_TEACHER\"\r\nexport const EDIT_TEACHER = \"EDIT_TEACHER\"\r\nexport const DELETE_TEACHER = \"DELETE_TEACHER\"\r\nexport const TEACHER_CHANGE_PASSWORD = \"TEACHER_CHANGE_PASSWORD\"\r\n\r\nexport const GET_ALL_CLASSES = \"GET_ALL_CLASSES\"\r\nexport const GET_CLASS_BY_ID = \"GET_CLASS_BY_ID\"\r\nexport const GET_CLASSES_BY_NAME = \"GET_CLASSES_BY_NAME\"\r\nexport const ADD_CLASS = \"ADD_CLASS\"\r\nexport const EDIT_CLASS = \"EDIT_CLASS\"\r\nexport const DELETE_CLASS = \"DELETE_CLASS\"\r\n\r\nexport const GET_ALL_ADMINS = \"GET_ALL_ADMINS\"\r\nexport const GET_ADMIN_BY_ID = \"GET_ADMIN_BY_ID\"\r\nexport const EDIT_ADMIN = \"EDIT_ADMIN\"\r\nexport const ADD_ADMIN = \"ADD_ADMIN\"\r\nexport const ADMIN_CHANGE_PASSWORD = \"ADMIN_CHANGE_PASSWORD\"\r\n\r\nexport const USER_LOGIN = \"USER_LOGIN\"\r\nexport const USER_LOGOUT = \"USER_LOGOUT\"\r\n\r\nexport const SET_MESSAGE = \"SET_MESSAGE\"\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\"\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {userLogout} from \"../../actions/userActions\";\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem(\"token\") !== undefined){\r\n            this.props.userLogout();\r\n        }\r\n        this.props.history.push(\"/\");\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        userLogout: () => {dispatch(userLogout())}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import {\r\n    USER_LOGIN,\r\n    USER_LOGOUT\r\n} from \"./types\";\r\n\r\nexport const userLogin = (token, user_id) => {\r\n    return (dispatch) => {\r\n        return dispatch({\r\n            type: USER_LOGIN,\r\n            payload: {\r\n                user_id,\r\n                token,\r\n                date: Date.now()\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const userLogout = () => {\r\n    return (dispatch) => {\r\n        return dispatch({\r\n            type: USER_LOGOUT\r\n        })\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"home-login\">\r\n                    <h1>Student Management System</h1>\r\n                    <Link to=\"/students/login\" className=\"btn btn-primary btn-block\">Login as Student</Link>\r\n                    <Link to=\"/teachers/login\" className=\"btn btn-success btn-block\">Login as Teacher</Link>\r\n                    <Link to=\"/admins/login\" className=\"btn btn-info btn-block\">Login as Admin</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import {\r\n    ADD_STUDENT,\r\n    DELETE_STUDENT,\r\n    EDIT_STUDENT,\r\n    GET_ALL_STUDENTS,\r\n    GET_STUDENTS_BY_NAME,\r\n    GET_STUDENT_BY_ID,\r\n    SET_MESSAGE,\r\n    USER_LOGIN,\r\n    STUDENT_CHANGE_PASSWORD\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\nimport {\r\n    allStudentsURL,\r\n    addStudentURL,\r\n    getDeleteStudentURL,\r\n    getEditStudentURL,\r\n    getStudentByIDURL,\r\n    getStudentsByNameURL,\r\n    studentLoginURL,\r\n    getStudentChangePasswordURL\r\n} from \"../config/routes\";\r\n\r\nexport const getAllStudents = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(allStudentsURL)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const students = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_ALL_STUDENTS,\r\n                payload: {\r\n                    students,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getStudentByID = (student_id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(getStudentByIDURL(student_id))\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const student = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_STUDENT_BY_ID,\r\n                payload: {\r\n                    student,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getStudentsByName = (student_name) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(getStudentsByNameURL(student_name))\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const students = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_STUDENTS_BY_NAME,\r\n                payload: {\r\n                    students,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const addStudent = (newStudent) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post(addStudentURL, newStudent)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const student = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n\r\n            return dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: {\r\n                    student\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const editStudent = (updatedStudent) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.put(getEditStudentURL(updatedStudent._id), updatedStudent)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const student = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n\r\n            return dispatch({\r\n                type: EDIT_STUDENT,\r\n                payload: {\r\n                    student\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteStudent = (deletedStudent) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.delete(getDeleteStudentURL(deletedStudent._id))\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const student = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n\r\n            return dispatch({\r\n                type: DELETE_STUDENT,\r\n                payload: {\r\n                    student\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const studentLogin = (studentAccount) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post(studentLoginURL, studentAccount)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const {token} = res.data;\r\n            const user_id = data._id;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (data === null) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message: \"Wrong email or password\",\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: USER_LOGIN,\r\n                payload: {\r\n                    user_id,\r\n                    token,\r\n                    date: Date.now()\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const studentChangePassword = (updatedStudentID, oldPassword, newPassword) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.put(getStudentChangePasswordURL(updatedStudentID), {oldPassword, newPassword})\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const student = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n\r\n            return dispatch({\r\n                type: STUDENT_CHANGE_PASSWORD,\r\n                payload: {\r\n                    student\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}","import {\r\n    ADD_TEACHER,\r\n    DELETE_TEACHER,\r\n    EDIT_TEACHER,\r\n    GET_ALL_TEACHERS,\r\n    GET_TEACHERS_BY_NAME,\r\n    GET_TEACHER_BY_ID,\r\n    SET_MESSAGE,\r\n    USER_LOGIN,\r\n    TEACHER_CHANGE_PASSWORD\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\nimport {\r\n    addTeacherURL,\r\n    allTeachersURL,\r\n    getDeleteTeacherURL,\r\n    getEditTeacherURL,\r\n    getTeacherByIDURL,\r\n    getTeachersByNameURL,\r\n    teacherLoginURL,\r\n    getTeacherChangePasswordURL\r\n} from \"../config/routes\";\r\n\r\nexport const getAllTeachers = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(allTeachersURL)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const teachers = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_ALL_TEACHERS,\r\n                payload: {\r\n                    teachers,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getTeacherByID = (teacher_id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(getTeacherByIDURL(teacher_id))\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const teacher = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_TEACHER_BY_ID,\r\n                payload: {\r\n                    teacher,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getTeachersByName = (teacher_name) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(getTeachersByNameURL(teacher_name))\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const teachers = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_TEACHERS_BY_NAME,\r\n                payload: {\r\n                    teachers,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const addTeacher = (newTeacher) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post(addTeacherURL, newTeacher)\r\n            \r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const teacher = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n\r\n            return dispatch({\r\n                type: ADD_TEACHER,\r\n                payload: {\r\n                    teacher\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const editTeacher = (updatedTeacher) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.put(getEditTeacherURL(updatedTeacher._id), updatedTeacher)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const teacher = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n\r\n            return dispatch({\r\n                type: EDIT_TEACHER,\r\n                payload: {\r\n                    teacher\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteTeacher = (deletedTeacher) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.delete(getDeleteTeacherURL(deletedTeacher._id))\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const teacher = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n\r\n            return dispatch({\r\n                type: DELETE_TEACHER,\r\n                payload: {\r\n                    teacher\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const teacherLogin = (teacherAccount) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post(teacherLoginURL, teacherAccount)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const {token} = res.data;\r\n            const user_id = data._id;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (data === null) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message: \"Wrong email or password\",\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: USER_LOGIN,\r\n                payload: {\r\n                    user_id,\r\n                    token,\r\n                    date: Date.now()\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const teacherChangePassword = (updatedTeacherID, oldPassword, newPassword) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.put(getTeacherChangePasswordURL(updatedTeacherID), {oldPassword, newPassword})\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const teacher = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n\r\n            return dispatch({\r\n                type: TEACHER_CHANGE_PASSWORD,\r\n                payload: {\r\n                    teacher\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}","import {\r\n    GET_ALL_ADMINS,\r\n    GET_ADMIN_BY_ID,\r\n    EDIT_ADMIN,\r\n    ADD_ADMIN,\r\n    SET_MESSAGE,\r\n    USER_LOGIN,\r\n    ADMIN_CHANGE_PASSWORD\r\n} from \"../actions/types\";\r\nimport axios from \"axios\";\r\nimport {\r\n    allAdminsURL,\r\n    addAdminURL,\r\n    getAdminByIDURL,\r\n    getEditAdminURL,\r\n    adminLoginURL,\r\n    getAdminChangePasswordURL\r\n} from \"../config/routes\";\r\n\r\nexport const getAllAdmins = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(allAdminsURL)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const admins = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_ALL_ADMINS,\r\n                payload: {\r\n                    admins,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAdminByID = (admin_id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(getAdminByIDURL(admin_id))\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const admin = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_ADMIN_BY_ID,\r\n                payload: {\r\n                    admin,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const addAdmin = (newAdmin) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post(addAdminURL, newAdmin)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const admin = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: ADD_ADMIN,\r\n                payload: {\r\n                    admin,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const editAdmin = (updatedAdmin) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.put(getEditAdminURL(updatedAdmin._id), updatedAdmin)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const admin = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: EDIT_ADMIN,\r\n                payload: {\r\n                    admin,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const adminLogin = (adminAccount) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post(adminLoginURL, adminAccount)\r\n            const {\r\n                data,\r\n                success,\r\n                message,\r\n            } = res.data;\r\n            const {token} = res.data;\r\n            const user_id = data._id;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message: \"Wrong email or password\",\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (data === null) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message: \"Wrong email or password\",\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: USER_LOGIN,\r\n                payload: {\r\n                    user_id,\r\n                    token,\r\n                    date: Date.now()\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const adminChangePassword = (updatedAdminID, oldPassword, newPassword) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.put(getAdminChangePasswordURL(updatedAdminID), {oldPassword, newPassword})\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const admin = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n\r\n            return dispatch({\r\n                type: ADMIN_CHANGE_PASSWORD,\r\n                payload: {\r\n                    admin\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {clearMessage} from \"../../actions/messageActions\";\r\n\r\nclass MessageAlert extends Component {\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.props.clearMessage();\r\n        }, 300)\r\n    }\r\n\r\n    render() {\r\n        const {message, msg_type} = this.props;\r\n        let renderedMessage = message;\r\n\r\n        return (\r\n            <div className={`alert alert-${msg_type}`} role=\"alert\">\r\n                {renderedMessage}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        message: state.messageReducer.message,\r\n        msg_type: state.messageReducer.msg_type\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearMessage: () => {dispatch(clearMessage())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageAlert);\r\n","import {\r\n    SET_MESSAGE,\r\n    CLEAR_MESSAGE\r\n} from \"./types\";\r\n\r\nexport const setMessage = (message) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: SET_MESSAGE,\r\n            payload: {\r\n                message\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const clearMessage = () => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: CLEAR_MESSAGE\r\n        })\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {studentChangePassword} from \"../../actions/studentActions\";\r\nimport {teacherChangePassword} from \"../../actions/teacherActions\";\r\nimport {adminChangePassword} from \"../../actions/adminActions\";\r\nimport MessageAlert from \"../partial/MessageAlert\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\n\r\nclass ChangePassword extends Component {\r\n\r\n    state = {\r\n        old_password: \"\",\r\n        new_password: \"\",\r\n        user: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id)\r\n\r\n        this.setState({\r\n            user\r\n        })\r\n\r\n        if (user == null){\r\n            this.props.history.push(\"/\");\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onSubmit = (e) => {\r\n        e.preventDefault();\r\n\r\n        const {user, old_password, new_password} = this.state;\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n\r\n        if (user.role === 'student'){\r\n            this.props.studentChangePassword(user_id, old_password, new_password)\r\n        }\r\n\r\n        if (user.role === 'teacher'){\r\n            this.props.teacherChangePassword(user_id, old_password, new_password)\r\n        }\r\n\r\n        if (user.role === 'admin'){\r\n            this.props.adminChangePassword(user_id, old_password, new_password)\r\n        }\r\n\r\n        this.setState({\r\n            old_password: \"\",\r\n            new_password: \"\",\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {old_password, new_password} = this.state;\r\n            \r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Change Password</h1>\r\n                <MessageAlert/>    \r\n\r\n                <form onSubmit={this.onSubmit}>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Old Password:</label>\r\n                        <input className=\"form-control\" placeholder=\"Old Password\" type=\"password\" id=\"old_password\" name=\"old_password\" onChange={this.onChange} required value={old_password}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>New Password:</label>\r\n                        <input className=\"form-control\" placeholder=\"New Password\" type=\"password\" id=\"new_password\" name=\"new_password\" onChange={this.onChange} required value={new_password}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Change Password</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        studentChangePassword: (updatedStudentID, oldPassword, newPassword) => {dispatch(studentChangePassword(updatedStudentID, oldPassword, newPassword))},\r\n        teacherChangePassword: (updatedTeacherID, oldPassword, newPassword) => {dispatch(teacherChangePassword(updatedTeacherID, oldPassword, newPassword))},\r\n        adminChangePassword: (updatedAdminID, oldPassword, newPassword) => {dispatch(adminChangePassword(updatedAdminID, oldPassword, newPassword))}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ChangePassword);\r\n","import {\r\n    ADD_CLASS,\r\n    DELETE_CLASS,\r\n    EDIT_CLASS,\r\n    GET_ALL_CLASSES,\r\n    GET_CLASSES_BY_NAME,\r\n    GET_CLASS_BY_ID,\r\n    SET_MESSAGE,\r\n    CLEAR_MESSAGE\r\n} from \"../actions/types\";\r\nimport axios from \"axios\";\r\nimport {\r\n    addClassURL,\r\n    allClassesURL,\r\n    getClassByIDURL,\r\n    getClassesByNameURL,\r\n    getDeleteClassURL,\r\n    getEditClassURL\r\n} from \"../config/routes\";\r\n\r\nexport const getAllClasses = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let classes = [];\r\n            const res = await axios.get(allClassesURL)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            classes = data\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_ALL_CLASSES,\r\n                payload: {\r\n                    classes\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getClassByID = (class_id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(getClassByIDURL(class_id))\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const classItem = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_CLASS_BY_ID,\r\n                payload: {\r\n                    classItem,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getClassesByName = (class_name) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(getClassesByNameURL(class_name))\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const classes = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_CLASSES_BY_NAME,\r\n                payload: {\r\n                    classes,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const addClass = (newClass) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post(addClassURL, newClass)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const classItem = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n            return dispatch({\r\n                type: ADD_CLASS,\r\n                payload: {\r\n                    classItem\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const editClass = (updatedClass) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.put(getEditClassURL(updatedClass._id), updatedClass)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const classItem = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n            return dispatch({\r\n                type: EDIT_CLASS,\r\n                payload: {\r\n                    classItem\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteClass = (deletedClassID) => {\r\n    console.log(deletedClassID)\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.delete(getDeleteClassURL(deletedClassID))\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n\r\n            console.log(data)\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n            return dispatch({\r\n                type: DELETE_CLASS,\r\n                payload: {\r\n                    deletedClassID\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport MessageAlert from \"../partial/MessageAlert\";\r\nimport {connect} from \"react-redux\";\r\nimport {addClass} from \"../../actions/classActions\";\r\n\r\nclass AddClassForm extends Component {\r\n\r\n    state = {\r\n        class_name: \"\"\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onCreateClass = (e) => {\r\n        e.preventDefault();\r\n        const {class_name} = this.state;\r\n\r\n        this.props.addClass({class_name})\r\n\r\n        this.setState({\r\n            class_name: \"\"\r\n        }, () => {\r\n            //this.props.history.push(\"/classes\");\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const {class_name} = this.state;\r\n\r\n        return (\r\n            <div className=\"container text-center\">\r\n                <h1>Add Student Form</h1>\r\n                <MessageAlert/>\r\n                <form onSubmit={this.onCreateClass}>\r\n                    <div className=\"form-group\">\r\n                        <label>Class Name:</label>\r\n                        <input type=\"text\" id=\"class_name\" name=\"class_name\" className=\"form-control\" placeholder=\"Class Name\" value={class_name} onChange={this.onChange} required minLength=\"5\" maxLength=\"12\"/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-block btn-primary\">\r\n                            Create Class\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addClass: (newClass) => {dispatch(addClass(newClass))}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddClassForm);\r\n","var mS = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'June', 'July', 'Aug', 'Sept', 'Oct', 'Nov', 'Dec'];\r\n\r\nexport const dateParser = (dateItem) => {\r\n    const parsedDate = Date.parse(dateItem);\r\n\r\n    const dateObject = new Date(parsedDate);\r\n\r\n    let y = \"\" + dateObject.getFullYear();\r\n    let m = \"\" + dateObject.getMonth();\r\n    let d = \"\" + dateObject.getDate();\r\n\r\n    if (m.length == 1){\r\n        m = \"0\" + m;\r\n    }\r\n\r\n    if (d.length == 1){\r\n        d = \"0\" + d;\r\n    }\r\n\r\n    return `${y}-${m}-${d}`;\r\n}\r\n\r\nexport const dateParserWithMonth = (dateItem) => {\r\n    const parsedDate = Date.parse(dateItem);\r\n\r\n    const dateObject = new Date(parsedDate);\r\n\r\n    let y = \"\" + dateObject.getFullYear();\r\n    let m = mS[dateObject.getMonth()];\r\n    let d = \"\" + dateObject.getDate();\r\n\r\n    if (d.length == 1){\r\n        d = \"0\" + d;\r\n    }\r\n\r\n    return `${d}-${m}-${y}`;\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {deleteClass} from \"../../actions/classActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {dateParserWithMonth} from \"../../utils/dateParser\";\r\n\r\nclass ClassItem extends Component {\r\n\r\n    render() {\r\n        const {classItem, deleteClass} = this.props; \r\n        const {class_name, _id, created_date} = classItem;\r\n\r\n        return (\r\n            <div className=\"list-group-item\">\r\n                <div>\r\n                    <Link to={`/classes/details/${class_name}`}>\r\n                        <h4>{class_name}</h4>\r\n                    </Link>\r\n                    <h5>Created Date: {dateParserWithMonth(created_date)}</h5>\r\n                </div>\r\n                    <ul>\r\n                        <li>\r\n                            <Link className=\"btn btn-warning\" to={`/classes/edit/${_id}`}>Edit</Link>\r\n                        </li>\r\n                        <li>\r\n                            <button onClick={() => deleteClass(_id)} className=\"btn btn-danger\">Delete</button>\r\n                        </li>\r\n                    </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteClass: (deletedClassID) => {dispatch(deleteClass(deletedClassID))}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ClassItem);\r\n","function paginate(\r\n    totalItems,\r\n    currentPage = 1,\r\n    pageSize = 10,\r\n    maxPages = 10\r\n) {\r\n    // calculate total pages\r\n    let totalPages = Math.ceil(totalItems / pageSize);\r\n\r\n    // ensure current page isn't out of range\r\n    if (currentPage < 1) {\r\n        currentPage = 1;\r\n    } else if (currentPage > totalPages) {\r\n        currentPage = totalPages;\r\n    }\r\n\r\n    let startPage, endPage;\r\n    if (totalPages <= maxPages) {\r\n        // total pages less than max so show all pages\r\n        startPage = 1;\r\n        endPage = totalPages;\r\n    } else {\r\n        // total pages more than max so calculate start and end pages\r\n        let maxPagesBeforeCurrentPage = Math.floor(maxPages / 2);\r\n        let maxPagesAfterCurrentPage = Math.ceil(maxPages / 2) - 1;\r\n        if (currentPage <= maxPagesBeforeCurrentPage) {\r\n            // current page near the start\r\n            startPage = 1;\r\n            endPage = maxPages;\r\n        } else if (currentPage + maxPagesAfterCurrentPage >= totalPages) {\r\n            // current page near the end\r\n            startPage = totalPages - maxPages + 1;\r\n            endPage = totalPages;\r\n        } else {\r\n            // current page somewhere in the middle\r\n            startPage = currentPage - maxPagesBeforeCurrentPage;\r\n            endPage = currentPage + maxPagesAfterCurrentPage;\r\n        }\r\n    }\r\n\r\n    // calculate start and end item indexes\r\n    let startIndex = (currentPage - 1) * pageSize;\r\n    let endIndex = Math.min(startIndex + pageSize - 1, totalItems - 1);\r\n\r\n    // create an array of pages to ng-repeat in the pager control\r\n    let pages = Array.from(Array((endPage + 1) - startPage).keys()).map(i => startPage + i);\r\n\r\n    // return object with all pager properties required by the view\r\n    return {\r\n        totalItems: totalItems,\r\n        currentPage: currentPage,\r\n        pageSize: pageSize,\r\n        totalPages: totalPages,\r\n        startPage: startPage,\r\n        endPage: endPage,\r\n        startIndex: startIndex,\r\n        endIndex: endIndex,\r\n        pages: pages\r\n    };\r\n}\r\n\r\nexport default paginate;","import React, { Component } from 'react';\r\n\r\nclass Pagination extends Component {\r\n    render() {\r\n        const {pages, currentPage} = this.props.pageObject;\r\n        const {changeCurrentPage} = this.props;\r\n\r\n        const arrayOfPageLinks = pages.map((page) => {\r\n            if (page == currentPage){\r\n                return <li className=\"page-item active\" key={page}>\r\n                <button className=\"page-link\" onClick={() => {\r\n                    changeCurrentPage(page)\r\n                }}>{page}</button>\r\n            </li>\r\n            }\r\n            return <li className=\"page-item\"  key={page}>\r\n                <button className=\"page-link\" onClick={() => {\r\n                    changeCurrentPage(page)\r\n                }}>{page}</button>\r\n            </li>\r\n        })\r\n\r\n        return (\r\n            <nav aria-label=\"Page Navigation\" className=\"section-padding\">\r\n                <ul className=\"pagination justify-content-center\">\r\n\r\n                    <li className=\"page-item\">\r\n                        <button className=\"page-link\" onClick={() => {changeCurrentPage(currentPage - 1)}}>Previous</button>\r\n                    </li>\r\n\r\n                    {arrayOfPageLinks}\r\n\r\n                    <li className=\"page-item\">\r\n                        <button className=\"page-link\" onClick={() => {changeCurrentPage(currentPage + 1)}}>Next</button>\r\n                    </li>\r\n\r\n                </ul>\r\n            </nav>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Pagination;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {getAllClasses} from \"../../actions/classActions\";\r\nimport ClassItem from \"./ClassItem\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\nimport paginate from \"../../utils/paginate\";\r\nimport Pagination from \"../partial/Pagination\";\r\n\r\nclass ListOfClasses extends Component {\r\n\r\n    state = {\r\n        currentPage: 1,\r\n        searched_classname: \"\",\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id)\r\n        await this.props.getAllClasses();\r\n\r\n        if (user.role == \"student\") {\r\n            this.props.history.push(`/students/details/${user_id}`);\r\n        }\r\n\r\n        if (user.role == \"teacher\") {\r\n            this.props.history.push(`/teachers/details/${user_id}`);\r\n        }\r\n    }\r\n\r\n    changeCurrentPage = (pageNum) => {\r\n        this.setState({\r\n            currentPage: pageNum\r\n        })\r\n    }\r\n\r\n    /*\r\n    onSearchByName = (e) => {\r\n        const search_name = e.target.value;\r\n\r\n        console.log(this.props.classes)\r\n\r\n        this.props.classes = this.props.classes.filter(item => {\r\n            return item.class_name.toLowerCase().includes(search_name.toLowerCase());\r\n        })\r\n\r\n        console.log(this.props.classes)\r\n    }\r\n    */\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {currentPage, searched_classname} = this.state;\r\n        let classList = this.props.classes;\r\n        //const {onSearchByName} = this;\r\n        const {onChange} = this;\r\n\r\n        if (searched_classname){\r\n            classList = classList.filter(item => {\r\n                return item.class_name.toLowerCase().includes(searched_classname.toLowerCase())\r\n            })\r\n        }\r\n\r\n        const pageObject = paginate(classList.length, currentPage, 6, 5)\r\n\r\n        const currentClassList = classList.slice(pageObject.startIndex, pageObject.endIndex + 1);\r\n\r\n        const classItems = currentClassList.map(classItem => {\r\n            return <ClassItem classItem={classItem} key={classItem._id}/>\r\n        })\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <Link to=\"/classes/add\" className=\"btn btn-primary\">Add Class</Link>\r\n\r\n                <div className=\"search-container\">\r\n                    <form onSubmit={(e) => {e.preventDefault()}}>\r\n                        <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\">Class Name</span>\r\n                            </div>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Class Name\" \r\n                                id=\"searched_classname\"\r\n                                name=\"searched_classname\"\r\n                                onChange={onChange} />\r\n                            </div>\r\n                    </form>\r\n                </div>\r\n                \r\n                <div className=\"list-group\">\r\n                    {classItems}\r\n                </div>\r\n                <Pagination pageObject={pageObject} changeCurrentPage={this.changeCurrentPage}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        classes: state.classReducer.classes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAllClasses: () => {dispatch(getAllClasses())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOfClasses);\r\n","import React, { Component } from 'react';\r\nimport MessageAlert from \"../partial/MessageAlert\";\r\nimport axios from \"axios\";\r\nimport {getClassByIDURL} from \"../../config/routes\";\r\nimport {connect} from \"react-redux\";\r\nimport {editClass} from \"../../actions/classActions\"\r\n\r\nclass EditClassForm extends Component {\r\n\r\n    state = {\r\n        class_name: \"\",\r\n        class_item: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get(getClassByIDURL(this.props.match.params.class_id))\r\n        const data = res.data.data;\r\n        this.setState({\r\n            class_name: data.class_name,\r\n            class_item: data\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onCreateClass = (e) => {\r\n        e.preventDefault();\r\n        const {class_name, class_item} = this.state;\r\n\r\n        class_item.class_name = class_name;\r\n\r\n        this.props.editClass(class_item)\r\n\r\n        this.setState({\r\n            class_name: \"\",\r\n            class_item: {}\r\n        }, () => {\r\n            this.props.history.push(\"/classes\");\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {class_name} = this.state;\r\n\r\n        return (\r\n            <div className=\"container text-center\">\r\n                <h1>Edit Student Form</h1>\r\n                <MessageAlert/>\r\n                <form onSubmit={this.onCreateClass}>\r\n                    <div className=\"form-group\">\r\n                        <label>Class Name:</label>\r\n                        <input type=\"text\" id=\"class_name\" name=\"class_name\" className=\"form-control\" placeholder=\"Class Name\" value={class_name} onChange={this.onChange} required minLength=\"5\" maxLength=\"12\"/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-block btn-primary\">\r\n                            Update Class\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editClass: (updatedClass) => dispatch(editClass(updatedClass))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(EditClassForm);\r\n","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {deleteStudent} from \"../../actions/studentActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\nimport {dateParserWithMonth} from \"../../utils/dateParser\";\r\n\r\nclass StudentItem extends Component {\r\n\r\n    state = {\r\n        role: \"\"\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id)\r\n\r\n        this.setState({\r\n            role: user.role\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const studentItem = this.props.studentItem;\r\n        const {\r\n            _id,\r\n            name,\r\n            dob\r\n        } = studentItem\r\n\r\n        const buttons = this.state.role === \"admin\" ? (\r\n            <ul>\r\n                <li>\r\n                    <Link className=\"btn btn-warning\" to={`/students/edit/${_id}`}>Edit</Link>\r\n                </li>\r\n                <li>\r\n                    <button onClick={() => deleteStudent(studentItem)} className=\"btn btn-danger\">Delete</button>\r\n                </li>\r\n            </ul>\r\n        ) : (\"\")\r\n\r\n        return (\r\n            <div className=\"list-group-item\">\r\n                <div>\r\n                    <Link to={`/students/details/${_id}`}>\r\n                        <h4>{name}</h4>\r\n                    </Link>\r\n                    <h5>Date of Birth: {dateParserWithMonth(dob)}</h5>\r\n                </div>\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteStudent: (deletedStudent) => {dispatch(deleteStudent(deletedStudent))}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(StudentItem);\r\n","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {deleteTeacher} from \"../../actions/teacherActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\nimport {dateParserWithMonth} from \"../../utils/dateParser\";\r\n\r\nclass TeacherItem extends Component {\r\n\r\n    state = {\r\n        role: \"\"\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id)\r\n\r\n        this.setState({\r\n            role: user.role\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const teacherItem = this.props.teacherItem;\r\n        const {\r\n            _id,\r\n            name,\r\n            dob\r\n        } = teacherItem\r\n\r\n        const buttons = this.state.role === \"admin\" ? (\r\n            <ul>\r\n                        <li>\r\n                            <Link className=\"btn btn-warning\" to={`/teachers/edit/${_id}`}>Edit</Link>\r\n                        </li>\r\n                        <li>\r\n                            <button onClick={() => deleteTeacher(teacherItem)} className=\"btn btn-danger\">Delete</button>\r\n                        </li>\r\n                    </ul>\r\n        ) : (\"\")\r\n\r\n        return (\r\n            <div className=\"list-group-item\">\r\n                <div>\r\n                    <Link to={`/teachers/details/${_id}`}>\r\n                        <h4>{name}</h4>\r\n                    </Link>\r\n                    <h5>Date of Birth: {dateParserWithMonth(dob)}</h5>\r\n                </div>\r\n                    {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteTeacher: (deletedTeacher) => {dispatch(deleteTeacher(deletedTeacher))}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(TeacherItem);\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport {getStudentByClassNameURL, getTeacherByClassNameURL} from \"../../config/routes\";\r\nimport StudentItem from \"../student/StudentItem\";\r\nimport TeacherItem from \"../teacher/TeacherItem\";\r\n\r\nclass ClassDetail extends Component {\r\n\r\n    state = {\r\n        teacher: {},\r\n        students: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const {class_name} = this.props.match.params;\r\n\r\n        let res = await axios.get(getStudentByClassNameURL(class_name));\r\n        const students = res.data.data;\r\n\r\n        res = await axios.get(getTeacherByClassNameURL(class_name));\r\n        const teacher = res.data.data;\r\n\r\n        this.setState({\r\n            students,\r\n            teacher\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {students, teacher} = this.state;\r\n\r\n        const studentList = students.length === 0 ? (\r\n            <h2>There is no student in this class</h2>\r\n        ) : students.map(studentItem => {\r\n            return <StudentItem key={studentItem._id} studentItem={studentItem}/>\r\n        })\r\n\r\n        const teacherItem = teacher === null ? (\r\n            <h2>There is no teacher in this class</h2>\r\n        ) : (\r\n            <TeacherItem key={teacher._id} teacherItem={teacher}/>\r\n        ) \r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h2>Teacher</h2>\r\n                <ul className=\"list-group\">\r\n                    {teacherItem}\r\n                </ul>\r\n                <h2>Students</h2>\r\n                <ul className=\"list-group\">\r\n                    {studentList}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClassDetail;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {addStudent} from \"../../actions/studentActions\";\r\nimport {getAllClasses} from \"../../actions/classActions\";\r\nimport MessageAlert from \"../partial/MessageAlert\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\n\r\nclass AddStudentForm extends Component {\r\n\r\n    state = {\r\n        name: \"\",\r\n        phone_number: \"\",\r\n        dob: \"\",\r\n        address: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        assigned_classroom: \"\"\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id)\r\n\r\n        if (user == null || user.role != \"admin\"){\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        if (user.role == \"student\") {\r\n            this.props.history.push(`/students/details/${user_id}`);\r\n        }\r\n\r\n        if (user.role == \"teacher\") {\r\n            this.props.history.push(`/teachers/details/${user_id}`);\r\n        }\r\n\r\n        this.props.getAllClasses()\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onAddStudent = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            email,\r\n            password,\r\n            assigned_classroom\r\n        } = this.state;\r\n\r\n        this.props.addStudent({\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            email,\r\n            password,\r\n            assigned_classroom\r\n        })\r\n\r\n        this.setState({\r\n            name: \"\",\r\n            phone_number: \"\",\r\n            dob: \"\",\r\n            address: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n        }, () => {\r\n            //this.props.history.push(\"/students\");\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            email,\r\n            password,\r\n            assigned_classroom\r\n        } = this.state;\r\n\r\n        const classItems = this.props.classes.map((classItem, index) => {\r\n            /*\r\n            if (index === 0){\r\n                return <option key={classItem._id} selected value={classItem.class_name}>\r\n                    {classItem.class_name}\r\n                </option>\r\n            }\r\n            */\r\n            return <option key={classItem._id} value={classItem.class_name}>\r\n                {classItem.class_name}\r\n            </option>\r\n        })\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Add Student Form</h1>\r\n                <MessageAlert/>\r\n\r\n                <form onSubmit={this.onAddStudent} method=\"POST\">\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Name:</label>\r\n                        <input className=\"form-control\" placeholder=\"Name\" type=\"text\" id=\"name\" name=\"name\" onChange={this.onChange} required value={name}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Phone Number:</label>\r\n                        <input className=\"form-control\" placeholder=\"Phone Number\" type=\"text\" id=\"phone_number\" name=\"phone_number\" onChange={this.onChange} required value={phone_number}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Date of Birth:</label>\r\n                        <input className=\"form-control\" type=\"date\" id=\"dob\" name=\"dob\" onChange={this.onChange}required value={dob}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Email:</label>\r\n                        <input className=\"form-control\" placeholder=\"Email\" type=\"email\" id=\"email\" name=\"email\" onChange={this.onChange} required value={email}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password:</label>\r\n                        <input className=\"form-control\" placeholder=\"Password\" type=\"password\" id=\"password\" name=\"password\" onChange={this.onChange} required value={password}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Address:</label>\r\n                        <textarea className=\"form-control\" placeholder=\"Address\" id=\"address\" name=\"address\" onChange={this.onChange} value={address}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Assigned Classroom:</label>\r\n                        <select required id=\"assigned_classroom\" defaultValue={\"\"} className=\"custom-select\" onChange={this.onChange}>\r\n                            <option key=\"0\" value={\"\"} disabled>\r\n                                None\r\n                            </option>\r\n                            {classItems}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Create Student</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        classes: state.classReducer.classes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addStudent: (newStudent) => {dispatch(addStudent(newStudent))},\r\n        getAllClasses: () => {dispatch(getAllClasses())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddStudentForm);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {editStudent} from \"../../actions/studentActions\";\r\nimport {getAllClasses} from \"../../actions/classActions\";\r\nimport MessageAlert from \"../partial/MessageAlert\";\r\nimport axios from \"axios\";\r\nimport {getStudentByIDURL} from \"../../config/routes\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\nimport {dateParser} from \"../../utils/dateParser\";\r\n\r\nclass EditStudentForm extends Component {\r\n\r\n    state = {\r\n        name: \"\",\r\n        phone_number: \"\",\r\n        dob: \"\",\r\n        address: \"\",\r\n        assigned_classroom: \"\",\r\n        student_item: {},\r\n        user: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id);\r\n\r\n        this.setState({\r\n            user\r\n        })\r\n\r\n        if (user == null){\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        /*\r\n        if (user.role == \"student\") {\r\n            this.props.history.push(`/students/details/${user_id}`);\r\n        }\r\n        */\r\n\r\n        if (user.role == \"teacher\") {\r\n            this.props.history.push(`/teachers/details/${user_id}`);\r\n        }\r\n\r\n        this.props.getAllClasses()\r\n\r\n        const res = await axios.get(getStudentByIDURL(this.props.match.params.student_id))\r\n        const {\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            assigned_classroom,\r\n        } = res.data.data;\r\n        this.setState({\r\n            student_item: res.data.data,\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            assigned_classroom,\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onEditStudent = (e) => {\r\n        const {\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            assigned_classroom,\r\n            student_item\r\n        } = this.state;\r\n\r\n        student_item.name = name;\r\n        student_item.phone_number = phone_number;\r\n        student_item.dob = dob;\r\n        student_item.address = address;\r\n        student_item.assigned_classroom = assigned_classroom;\r\n\r\n        this.props.editStudent(student_item)\r\n\r\n        this.setState({\r\n            name: \"\",\r\n            phone_number: \"\",\r\n            dob: \"\",\r\n            address: \"\",\r\n            assigned_classroom: \"\",\r\n            student_item: {}\r\n        }, () => {\r\n            this.props.history.push(\"/students\");\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {class_name, name, dob, phone_number, address, user} = this.state;\r\n\r\n        const classItems = this.props.classes.map((classItem, index) => {\r\n            if (classItem.class_name === class_name){\r\n                return <option key={classItem._id} defaultValue selected value={classItem.class_name}>\r\n                    {classItem.class_name}\r\n                </option>\r\n            }\r\n            return <option key={classItem._id} value={classItem.class_name}>\r\n                {classItem.class_name}\r\n            </option>\r\n        })\r\n\r\n        const assignedClassroomInput = user.role === \"admin\" ? (\r\n            <div className=\"form-group\">\r\n                <label>Assigned Classroom:</label>\r\n                <select required className=\"custom-select\" id=\"assigned_classroom\" onChange={this.onChange}>\r\n                    {classItems}\r\n                </select>\r\n            </div>\r\n        ) : (\"\");\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Edit Student Form</h1>\r\n                <MessageAlert/>\r\n\r\n                <form onSubmit={this.onEditStudent} method=\"POST\">\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Name:</label>\r\n                        <input className=\"form-control\" placeholder=\"Name\" type=\"text\" id=\"name\" name=\"name\" onChange={this.onChange} value={name} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Phone Number:</label>\r\n                        <input className=\"form-control\" placeholder=\"Phone Number\" type=\"text\" id=\"phone_number\" name=\"phone_number\" onChange={this.onChange} value={phone_number} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Date of Birth:</label>\r\n                        <input className=\"form-control\" type=\"date\" id=\"dob\" name=\"dob\" onChange={this.onChange}value={dateParser(dob)} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Address:</label>\r\n                        <textarea className=\"form-control\" placeholder=\"Address\" id=\"address\" name=\"address\" value={address} onChange={this.onChange} required></textarea>\r\n                    </div>\r\n\r\n                    {assignedClassroomInput}\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Update Student</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        classes: state.classReducer.classes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editStudent: (updatedStudent) => {dispatch(editStudent(updatedStudent))},\r\n        getAllClasses: () => {dispatch(getAllClasses())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditStudentForm);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {getAllStudents} from \"../../actions/studentActions\";\r\nimport StudentItem from \"./StudentItem\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\nimport paginate from \"../../utils/paginate\";\r\nimport Pagination from \"../partial/Pagination\";\r\n\r\nclass StudentList extends Component {\r\n\r\n    state = {\r\n        currentPage: 1,\r\n        searched_name: \"\"\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id)\r\n\r\n        if (user == null || user.role != \"admin\"){\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        if (user.role == \"student\") {\r\n            this.props.history.push(`/students/details/${user_id}`);\r\n        }\r\n\r\n        if (user.role == \"teacher\") {\r\n            this.props.history.push(`/teachers/details/${user_id}`);\r\n        }\r\n\r\n        this.props.getAllStudents()\r\n    }\r\n\r\n    changeCurrentPage = (pageNum) => {\r\n        this.setState({\r\n            currentPage: pageNum\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {currentPage, searched_name} = this.state;\r\n        let studentList = this.props.students;\r\n        const {onChange} = this;\r\n\r\n        if (searched_name){\r\n            studentList = studentList.filter(item => {\r\n                return item.name.toLowerCase().includes(searched_name.toLowerCase())\r\n            })\r\n        }\r\n\r\n        const pageObject = paginate(studentList.length, currentPage, 6, 5)\r\n\r\n        const currentStudentList = studentList.slice(pageObject.startIndex, pageObject.endIndex + 1);\r\n\r\n        const studentItems = currentStudentList.map(studentItem => {\r\n            return <StudentItem key={studentItem._id} studentItem={studentItem}/>\r\n        })\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to=\"/students/add\" className=\"btn btn-primary\">Add Student</Link>\r\n\r\n                <div className=\"search-container\">\r\n                    <form onSubmit={(e) => {e.preventDefault()}}>\r\n                        <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\">Student Name</span>\r\n                            </div>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Student Name\" \r\n                                id=\"searched_name\"\r\n                                name=\"searched_name\"\r\n                                value={searched_name}\r\n                                onChange={onChange} />\r\n                            </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <ul className=\"list-group\">\r\n                    {studentItems}\r\n                </ul>\r\n                <Pagination pageObject={pageObject} changeCurrentPage={this.changeCurrentPage}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        students: state.studentReducer.students\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAllStudents: () => {dispatch(getAllStudents())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentList);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {studentLogin} from \"../../actions/studentActions\";\r\nimport MessageAlert from \"../partial/MessageAlert\";\r\n\r\nclass StudentLoginForm extends Component {\r\n\r\n    state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem(\"token\") === undefined){\r\n            this.props.history.push(\"/logout\")\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onStudentLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        const {email, password} = this.state;\r\n\r\n        this.props.studentLogin({\r\n            email, password\r\n        })\r\n\r\n        setTimeout(() => {\r\n            if (localStorage.getItem(\"user_id\")){\r\n                this.props.history.push(`/students/details/${localStorage.getItem(\"user_id\")}`)\r\n                window.location.reload();\r\n            }\r\n        }, 2000)\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container login-container\">\r\n                <h1>Student Login</h1>\r\n                <MessageAlert/>\r\n\r\n                <form onSubmit={this.onStudentLogin} method=\"POST\">\r\n                \r\n                    <div className=\"form-group\">\r\n                        <label>Email:</label>\r\n                        <input className=\"form-control\" type=\"email\" placeholder=\"Email\" id=\"email\" name=\"email\" onChange={this.onChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password:</label>\r\n                        <input className=\"form-control\" type=\"password\" placeholder=\"Password\" id=\"password\" name=\"password\" onChange={this.onChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Login</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        studentLogin: (studentAccount) => {dispatch(studentLogin(studentAccount))}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(StudentLoginForm);\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport {getStudentByIDURL} from \"../../config/routes\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\nimport {dateParser, dateParserWithMonth} from \"../../utils/dateParser\";\r\n\r\nclass StudentDetail extends Component {\r\n\r\n    state = {\r\n        student_item: {}\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id)\r\n\r\n        if (user == null){\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        const res = await axios.get(getStudentByIDURL(this.props.match.params.student_id))\r\n        this.setState({\r\n            student_item: res.data.data\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {name, dob, email, assigned_classroom, phone_number, address, created_date} = this.state.student_item\r\n\r\n        return (\r\n            <div className=\"container detail-container\">\r\n                <h1 className=\"text-center\">{name}</h1>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                        <ul>\r\n                            <li>\r\n                                <b>Date of Birth: </b>{dateParserWithMonth(dob)}\r\n                            </li>\r\n                            <li>\r\n                                <b>Email: </b>{email}\r\n                            </li>\r\n                            <li>\r\n                                <b>Assigned Classroom: </b>{assigned_classroom}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                        <ul>\r\n                            <li>\r\n                                <b>Phone Number: </b>{phone_number}\r\n                            </li>\r\n                            <li>\r\n                                <b>Address: </b>{address}\r\n                            </li>\r\n                            <li>\r\n                                <b>Enrolled Date: </b>{dateParserWithMonth(created_date)}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StudentDetail;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {addTeacher} from \"../../actions/teacherActions\";\r\nimport {getAllClasses} from \"../../actions/classActions\";\r\nimport MessageAlert from \"../partial/MessageAlert\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\n\r\nclass AddTeacherForm extends Component {\r\n\r\n    state = {\r\n        name: \"\",\r\n        phone_number: \"\",\r\n        dob: \"\",\r\n        address: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        assigned_classroom: \"\"\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id)\r\n\r\n        if (user == null || user.role != \"admin\"){\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        if (user.role == \"student\") {\r\n            this.props.history.push(`/students/details/${user_id}`);\r\n        }\r\n\r\n        if (user.role == \"teacher\") {\r\n            this.props.history.push(`/teachers/details/${user_id}`);\r\n        }\r\n\r\n        this.props.getAllClasses()\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onAddTeacher = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            email,\r\n            password,\r\n            assigned_classroom\r\n        } = this.state;\r\n\r\n        this.props.addTeacher({\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            email,\r\n            password,\r\n            assigned_classroom\r\n        })\r\n\r\n        this.setState({\r\n            name: \"\",\r\n            phone_number: \"\",\r\n            dob: \"\",\r\n            address: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            assigned_classroom: \"\"\r\n        }, () => {\r\n            //this.props.history.push(\"/teachers\");\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            email,\r\n            password,\r\n            assigned_classroom\r\n        } = this.state;\r\n\r\n        const classItems = this.props.classes.map((classItem, index) => {\r\n            /*\r\n            if (index === 0){\r\n                return <option key={classItem._id} selected value={classItem.class_name}>\r\n                    {classItem.class_name}\r\n                </option>\r\n            }\r\n            */\r\n            return <option key={classItem._id} value={classItem.class_name}>\r\n                {classItem.class_name}\r\n            </option>\r\n        })\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Add Teacher Form</h1>\r\n                <MessageAlert/>\r\n\r\n                <form onSubmit={this.onAddTeacher} method=\"POST\">\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Name:</label>\r\n                        <input className=\"form-control\" placeholder=\"Name\" type=\"text\" id=\"name\" name=\"name\" onChange={this.onChange} required value={name}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Phone Number:</label>\r\n                        <input className=\"form-control\" placeholder=\"Phone Number\" type=\"text\" id=\"phone_number\" name=\"phone_number\" onChange={this.onChange} required value={phone_number}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Date of Birth:</label>\r\n                        <input className=\"form-control\" type=\"date\" id=\"dob\" name=\"dob\" onChange={this.onChange}required value={dob}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Email:</label>\r\n                        <input className=\"form-control\" placeholder=\"Email\" type=\"email\" id=\"email\" name=\"email\" onChange={this.onChange} required value={email}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password:</label>\r\n                        <input className=\"form-control\" placeholder=\"Password\" type=\"password\" id=\"password\" name=\"password\" onChange={this.onChange} required value={password}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Address:</label>\r\n                        <textarea className=\"form-control\" placeholder=\"Address\" id=\"address\" name=\"address\" value={address} onChange={this.onChange}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Assigned Classroom:</label>\r\n                        <select required id=\"assigned_classroom\" className=\"custom-select\" defaultValue={\"\"} onChange={this.onChange}>\r\n                            <option key=\"0\" value={\"\"} disabled>\r\n                                None\r\n                            </option>\r\n                            {classItems}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Create Teacher</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        classes: state.classReducer.classes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addTeacher: (newTeacher) => {dispatch(addTeacher(newTeacher))},\r\n        getAllClasses: () => {dispatch(getAllClasses())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTeacherForm);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {editTeacher} from \"../../actions/teacherActions\";\r\nimport {getAllClasses} from \"../../actions/classActions\";\r\nimport MessageAlert from \"../partial/MessageAlert\";\r\nimport axios from \"axios\";\r\nimport {getTeacherByIDURL} from \"../../config/routes\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\nimport {dateParser} from \"../../utils/dateParser\";\r\n\r\nclass EditTeacherForm extends Component {\r\n\r\n    state = {\r\n        name: \"\",\r\n        phone_number: \"\",\r\n        dob: \"\",\r\n        address: \"\",\r\n        assigned_classroom: \"\",\r\n        teacher_item: {},\r\n        user: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id)\r\n\r\n        this.setState({\r\n            user\r\n        })\r\n\r\n        if (user == null){\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        if (user.role == \"student\") {\r\n            this.props.history.push(`/students/details/${user_id}`);\r\n        }\r\n\r\n        /*\r\n        if (user.role == \"teacher\") {\r\n            this.props.history.push(`/teachers/details/${user_id}`);\r\n        }\r\n        */\r\n            \r\n        this.props.getAllClasses()\r\n\r\n        const res = await axios.get(getTeacherByIDURL(this.props.match.params.teacher_id))\r\n        const {\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            assigned_classroom,\r\n        } = res.data.data;\r\n        this.setState({\r\n            teacher_item: res.data.data,\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            assigned_classroom,\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onEditTeacher = (e) => {\r\n        const {\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            assigned_classroom,\r\n            teacher_item\r\n        } = this.state;\r\n\r\n        teacher_item.name = name;\r\n        teacher_item.phone_number = phone_number;\r\n        teacher_item.dob = dob;\r\n        teacher_item.address = address;\r\n        teacher_item.assigned_classroom = assigned_classroom;\r\n\r\n        this.props.editTeacher(teacher_item)\r\n\r\n        this.setState({\r\n            name: \"\",\r\n            phone_number: \"\",\r\n            dob: \"\",\r\n            address: \"\",\r\n            assigned_classroom: \"\",\r\n            student_item: {}\r\n        }, () => {\r\n            this.props.history.push(\"/teachers\");\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {class_name, name, dob, phone_number, address, user} = this.state;\r\n\r\n        const classItems = this.props.classes.map((classItem, index) => {\r\n            if (classItem.class_name === class_name){\r\n                return <option key={classItem._id} defaultValue selected value={classItem.class_name}>\r\n                    {classItem.class_name}\r\n                </option>\r\n            }\r\n            return <option key={classItem._id} value={classItem.class_name}>\r\n                {classItem.class_name}\r\n            </option>\r\n        })\r\n\r\n        const assignedClassroomInput = user.role === \"admin\" ? (\r\n            <div className=\"form-group\">\r\n                <label>Assigned Classroom:</label>\r\n                <select required className=\"custom-select\" id=\"assigned_classroom\" onChange={this.onChange}>\r\n                    {classItems}\r\n                </select>\r\n            </div>\r\n        ) : (\"\");\r\n\r\n        console.log(dateParser(dob));\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Edit Teacher Form</h1>\r\n                <MessageAlert/>\r\n\r\n                <form onSubmit={this.onEditTeacher} method=\"POST\">\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Name:</label>\r\n                        <input required className=\"form-control\" placeholder=\"Name\" type=\"text\" id=\"name\" name=\"name\" onChange={this.onChange} value={name}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Phone Number:</label>\r\n                        <input required className=\"form-control\" placeholder=\"Phone Number\" type=\"text\" id=\"phone_number\" name=\"phone_number\" onChange={this.onChange} value={phone_number}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Date of Birth:</label>\r\n                        <input required className=\"form-control\" type=\"date\" id=\"dob\" name=\"dob\" onChange={this.onChange} value={dateParser(dob)}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Address:</label>\r\n                        <textarea className=\"form-control\" placeholder=\"Address\" id=\"address\" name=\"address\" value={address} onChange={this.onChange} required></textarea>\r\n                    </div>\r\n\r\n                    {assignedClassroomInput}\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Update Teacher</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        classes: state.classReducer.classes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editTeacher: (updatedTeacher) => {dispatch(editTeacher(updatedTeacher))},\r\n        getAllClasses: () => {dispatch(getAllClasses())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTeacherForm);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {getAllTeachers} from \"../../actions/teacherActions\";\r\nimport TeacherItem from \"./TeacherItem\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\nimport paginate from \"../../utils/paginate\";\r\nimport Pagination from \"../partial/Pagination\";\r\n\r\nclass TeacherList extends Component {\r\n\r\n    state = {\r\n        currentPage: 1,\r\n        searched_name: \"\"\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id)\r\n\r\n        if (user == null || user.role != \"admin\"){\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        if (user.role == \"student\") {\r\n            this.props.history.push(`/students/details/${user_id}`);\r\n        }\r\n\r\n        if (user.role == \"teacher\") {\r\n            this.props.history.push(`/teachers/details/${user_id}`);\r\n        }\r\n\r\n        this.props.getAllTeachers()\r\n    }\r\n\r\n    changeCurrentPage = (pageNum) => {\r\n        this.setState({\r\n            currentPage: pageNum\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {currentPage, searched_name} = this.state;\r\n        let teacherList = this.props.teachers;\r\n        const {onChange} = this;\r\n\r\n        if (searched_name){\r\n            teacherList = teacherList.filter(item => {\r\n                return item.name.toLowerCase().includes(searched_name.toLowerCase())\r\n            })\r\n        }\r\n\r\n        const pageObject = paginate(teacherList.length, currentPage, 6, 5)\r\n\r\n        const currentTeacherList = teacherList.slice(pageObject.startIndex, pageObject.endIndex + 1);\r\n\r\n        const teacherItems = currentTeacherList.map(teacherItem => {\r\n            return <TeacherItem key={teacherItem._id} teacherItem={teacherItem}/>\r\n        })\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to=\"/teachers/add\" className=\"btn btn-primary\">Add Teacher</Link>\r\n\r\n                <div className=\"search-container\">\r\n                    <form onSubmit={(e) => {e.preventDefault()}}>\r\n                        <div className=\"input-group mb-3\">\r\n                            <div className=\"input-group-prepend\">\r\n                                <span className=\"input-group-text\">Teacher Name</span>\r\n                            </div>\r\n                                <input type=\"text\" className=\"form-control\" placeholder=\"Teacher Name\" \r\n                                id=\"searched_name\"\r\n                                name=\"searched_name\"\r\n                                value={searched_name}\r\n                                onChange={onChange} />\r\n                            </div>\r\n                    </form>\r\n                </div>\r\n\r\n                <ul className=\"list-group\">\r\n                    {teacherItems}\r\n                </ul>\r\n                <Pagination pageObject={pageObject} changeCurrentPage={this.changeCurrentPage}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        teachers: state.teacherReducer.teachers\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAllTeachers: () => {dispatch(getAllTeachers())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherList);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {teacherLogin} from \"../../actions/teacherActions\";\r\nimport MessageAlert from \"../partial/MessageAlert\";\r\n\r\nclass TeacherLoginForm extends Component {\r\n\r\n    state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem(\"token\") === undefined){\r\n            this.props.history.push(\"/logout\")\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onTeacherLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        const {email, password} = this.state;\r\n\r\n        this.props.teacherLogin({\r\n            email, password\r\n        })\r\n\r\n        setTimeout(() => {\r\n            if (localStorage.getItem(\"user_id\")){\r\n                this.props.history.push(`/teachers/details/${localStorage.getItem(\"user_id\")}`)\r\n                window.location.reload();\r\n            }\r\n        }, 2000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container login-container\">\r\n                <h1>Teacher Login</h1>\r\n                <MessageAlert/>\r\n\r\n                <form onSubmit={this.onTeacherLogin} method=\"POST\">\r\n                \r\n                    <div className=\"form-group\">\r\n                        <label>Email:</label>\r\n                        <input className=\"form-control\" type=\"email\" placeholder=\"Email\" id=\"email\" name=\"email\" onChange={this.onChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password:</label>\r\n                        <input className=\"form-control\" type=\"password\" placeholder=\"Password\" id=\"password\" name=\"password\" onChange={this.onChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Login</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        teacherLogin: (teacherAccount) => {dispatch(teacherLogin(teacherAccount))}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(TeacherLoginForm);\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport {getTeacherByIDURL} from \"../../config/routes\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\nimport {dateParser, dateParserWithMonth} from \"../../utils/dateParser\";\r\n\r\nclass TeacherDetail extends Component {\r\n\r\n    state = {\r\n        teacher_item: {}\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id)\r\n\r\n        if (user.role == \"student\") {\r\n            this.props.history.push(`/students/details/${user_id}`);\r\n        }\r\n\r\n        console.log(user)\r\n\r\n        if (user == null || user.role !== \"admin\" & user.role !== \"teacher\"){\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        const res = await axios.get(getTeacherByIDURL(this.props.match.params.teacher_id))\r\n        this.setState({\r\n            teacher_item: res.data.data\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {name, dob, email, assigned_classroom, phone_number, address, created_date} = this.state.teacher_item\r\n\r\n        return (\r\n            <div className=\"container detail-container\">\r\n                <h1 className=\"text-center\">{name}</h1>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                        <ul>\r\n                            <li>\r\n                                <b>Date of Birth: </b>{dateParserWithMonth(dob)}\r\n                            </li>\r\n                            <li>\r\n                                <b>Email: </b>{email}\r\n                            </li>\r\n                            <li>\r\n                                <b>Assigned Classroom: </b>{assigned_classroom}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                        <ul>\r\n                            <li>\r\n                                <b>Phone Number: </b>{phone_number}\r\n                            </li>\r\n                            <li>\r\n                                <b>Address: </b>{address}\r\n                            </li>\r\n                            <li>\r\n                                <b>Enrolled Date: </b>{dateParserWithMonth(created_date)}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TeacherDetail;\r\n","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass AdminItem extends Component {\r\n    render() {\r\n        const {adminItem} = this.props\r\n        \r\n        return (\r\n            <div>\r\n                <h4>{adminItem.email}</h4>\r\n                <h5>{adminItem.verified}</h5>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminItem;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {getAllAdmins} from \"../../actions/adminActions\";\r\nimport AdminItem from \"./AdminItem\";\r\n\r\nclass AdminList extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.getAllAdmins()\r\n    }\r\n\r\n    render() {\r\n        const adminList = this.props.admins.map(adminItem => {\r\n            return <AdminItem adminItem={adminItem}/>\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                {adminList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        admins: state.adminReducer.admins\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAllAdmins: () => {dispatch(getAllAdmins())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminList);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {adminLogin} from \"../../actions/adminActions\";\r\nimport MessageAlert from \"../partial/MessageAlert\";\r\n\r\nclass AdminLoginForm extends Component {\r\n\r\n    state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem(\"token\") === undefined){\r\n            this.props.history.push(\"/logout\")\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onAdminLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        const {email, password} = this.state;\r\n\r\n        this.props.adminLogin({\r\n            email, password\r\n        })\r\n\r\n        setTimeout(() => {\r\n            if (localStorage.getItem(\"token\")){\r\n                this.props.history.push(`/classes`)\r\n                window.location.reload();\r\n            }\r\n        }, 2000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container login-container\">\r\n                <h1>Admin Login</h1>\r\n                <MessageAlert/>\r\n\r\n                <form onSubmit={this.onAdminLogin} method=\"POST\">\r\n                \r\n                    <div className=\"form-group\">\r\n                        <label>Email:</label>\r\n                        <input className=\"form-control\" type=\"email\" placeholder=\"Email\" id=\"email\" name=\"email\" onChange={this.onChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password:</label>\r\n                        <input className=\"form-control\" type=\"password\" placeholder=\"Password\" id=\"password\" name=\"password\" onChange={this.onChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Login</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        adminLogin: (adminAccount) => {dispatch(adminLogin(adminAccount))}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AdminLoginForm);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {adminLogin, addAdmin} from \"../../actions/adminActions\";\r\n\r\nclass AdminSignUpForm extends Component {\r\n\r\n    state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onAdminLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        const {email, password} = this.state;\r\n\r\n        this.props.addAdmin({\r\n            email, password\r\n        })\r\n\r\n        this.props.adminAccount({\r\n            email, password\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onAdminLogin} method=\"POST\">\r\n                \r\n                    <div className=\"form-group\">\r\n                        <label>Email:</label>\r\n                        <input className=\"form-control\" type=\"email\" placeholder=\"Email\" id=\"email\" name=\"email\" onChange={this.onChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password:</label>\r\n                        <input className=\"form-control\" type=\"password\" placeholder=\"Password\" id=\"password\" name=\"password\" onChange={this.onChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        adminLogin: (adminAccount) => {dispatch(adminLogin(adminAccount))},\r\n        addAdmin: (newAdmin) => {dispatch(addAdmin(newAdmin))}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AdminSignUpForm);\r\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\nimport Navbar from \"./components/partial/Navbar\";\nimport Logout from \"./components/partial/Logout\";\nimport Home from \"./components/main/Home\";\nimport ChangePassword from \"./components/profile/ChangePassword\";\n\nimport AddClassForm from \"./components/class/AddClassForm\";\nimport ClassList from \"./components/class/ListOfClasses\";\nimport EditClassForm from \"./components/class/EditClassForm\";\nimport ClassDetail from \"./components/class/ClassDetail\";\n\nimport AddStudentForm from \"./components/student/AddStudentForm\";\nimport EditStudentForm from \"./components/student/EditStudentForm\";\nimport StudentList from \"./components/student/StudentList\";\nimport StudentLoginForm from \"./components/student/StudentLoginForm\";\nimport StudentDetails from \"./components/student/StudentDetail\";\n\nimport AddTeacherForm from \"./components/teacher/AddTeacherForm\";\nimport EditTeacherForm from \"./components/teacher/EditTeacherForm\";\nimport TeacherList from \"./components/teacher/TeacherList\";\nimport TeacherLoginForm from \"./components/teacher/TeacherLoginForm\";\nimport TeacherDetail from \"./components/teacher/TeacherDetail\";\n\nimport AdminList from \"./components/admin/AdminList\";\nimport AdminLoginForm from \"./components/admin/AdminLoginForm\";\nimport AdminSignUpForm from \"./components/admin/AdminSignUpForm\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar/>\n        <Switch>\n\n          <Route path=\"/classes/edit/:class_name\" component={EditClassForm}/>\n          <Route path=\"/classes\" exact component={ClassList}/>\n          <Route path=\"/classes/add\" component={AddClassForm}/>\n          <Route path=\"/classes/details/:class_name\" component={ClassDetail}/>\n\n          <Route path=\"/admins\" exact component={AdminList}/>\n          <Route path=\"/admins/login\" component={AdminLoginForm}/>\n          <Route path=\"/admins/signup\" component={AdminSignUpForm}/>\n          \n          <Route path=\"/students\" exact component={StudentList}/>\n          <Route path=\"/students/edit/:student_id\" component={EditStudentForm}/>\n          <Route path=\"/students/add\" component={AddStudentForm}/>\n          <Route path=\"/students/login\" component={StudentLoginForm}/>\n          <Route path=\"/students/details/:student_id\" component={StudentDetails}/>\n\n          <Route path=\"/teachers\" exact component={TeacherList}/>\n          <Route path=\"/teachers/edit/:teacher_id\" component={EditTeacherForm}/>\n          <Route path=\"/teachers/add\" component={AddTeacherForm}/>\n          <Route path=\"/teachers/login\" component={TeacherLoginForm}/>\n          <Route path=\"/teachers/details/:teacher_id\" component={TeacherDetail}/>\n\n          <Route path=\"/change-password\" component={ChangePassword}/>\n          <Route path=\"/logout\" component={Logout}/>\n          <Route path=\"/\" exact component={Home}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    ADD_ADMIN,\r\n    EDIT_ADMIN,\r\n    GET_ADMIN_BY_ID,\r\n    GET_ALL_ADMINS\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    admins: [],\r\n    admin: {}\r\n}\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_ADMIN:\r\n            return {\r\n                ...state,\r\n                admins: [...state.admins, action.payload.admin]\r\n            };\r\n            break;\r\n        case EDIT_ADMIN:\r\n            return {\r\n                ...state,\r\n                admins: state.admins.map(admin => {\r\n                    if (admin._id === action.payload.admin._id) {\r\n                        return action.payload.admin\r\n                    }\r\n                    return admin;\r\n                })\r\n            };\r\n        case GET_ALL_ADMINS:\r\n            return {\r\n                ...state,\r\n                admins: action.payload.admins\r\n            }\r\n            break;\r\n        case GET_ADMIN_BY_ID:\r\n            return {\r\n                ...state,\r\n                admin: action.payload.admin\r\n            }\r\n            default:\r\n                return state;\r\n                break;\r\n    }\r\n}\r\n\r\nexport default adminReducer;","import {\r\n    SET_MESSAGE,\r\n    CLEAR_MESSAGE\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    message: null,\r\n    msg_type: \"\"\r\n}\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: action.payload.message,\r\n                msg_type: action.payload.msg_type\r\n            };\r\n            break;\r\n        case CLEAR_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: null,\r\n                msg_type: \"\"\r\n            };\r\n            break;\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n}\r\n\r\nexport default messageReducer;","import {\r\n    ADD_STUDENT,\r\n    DELETE_STUDENT,\r\n    EDIT_STUDENT,\r\n    GET_ALL_STUDENTS,\r\n    GET_STUDENTS_BY_NAME,\r\n    GET_STUDENT_BY_ID\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    students: [],\r\n    student: {}\r\n}\r\n\r\nconst studentReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_ALL_STUDENTS:\r\n            return {\r\n                ...state,\r\n                students: action.payload.students\r\n            };\r\n            break;\r\n        case GET_STUDENT_BY_ID:\r\n            return {\r\n                ...state,\r\n                student: action.payload.student\r\n            };\r\n            break;\r\n        case GET_STUDENTS_BY_NAME:\r\n            return {\r\n                ...state,\r\n                students: action.payload.students\r\n            };\r\n            break;\r\n        case ADD_STUDENT:\r\n            return {\r\n                ...state,\r\n                students: [...state.students, action.payload.student]\r\n            };\r\n            break;\r\n        case EDIT_STUDENT:\r\n            return {\r\n                ...state,\r\n                students: state.students.map(student => {\r\n                    if (student._id === action.payload.student._id) {\r\n                        return action.payload.student\r\n                    }\r\n                    return student;\r\n                })\r\n            };\r\n            break;\r\n        case DELETE_STUDENT:\r\n            return {\r\n                ...state,\r\n                students: state.students.filter(student => {\r\n                    return student._id !== action.payload.student._id\r\n                })\r\n            };\r\n            break;\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n}\r\n\r\nexport default studentReducer;","import {\r\n    ADD_TEACHER,\r\n    DELETE_TEACHER,\r\n    EDIT_TEACHER,\r\n    GET_ALL_TEACHERS,\r\n    GET_TEACHERS_BY_NAME,\r\n    GET_TEACHER_BY_ID\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    teachers: [],\r\n    teacher: {}\r\n}\r\n\r\nconst teacherReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_ALL_TEACHERS:\r\n            return {\r\n                ...state,\r\n                teachers: action.payload.teachers\r\n            };\r\n            break;\r\n        case GET_TEACHER_BY_ID:\r\n            return {\r\n                ...state,\r\n                teacher: action.payload.teacher\r\n            };\r\n            break;\r\n        case GET_TEACHERS_BY_NAME:\r\n            return {\r\n                ...state,\r\n                teachers: action.payload.teachers\r\n            };\r\n            break;\r\n        case ADD_TEACHER:\r\n            return {\r\n                ...state,\r\n                teachers: [...state.teachers, action.payload.teacher]\r\n            };\r\n            break;\r\n        case EDIT_TEACHER:\r\n            return {\r\n                ...state,\r\n                teachers: state.teachers.map(teacher => {\r\n                    if (teacher._id === action.payload.teacher._id) {\r\n                        return action.payload.teacher\r\n                    }\r\n                    return teacher;\r\n                })\r\n            };\r\n            break;\r\n        case DELETE_TEACHER:\r\n            return {\r\n                ...state,\r\n                teachers: state.teachers.filter(teacher => {\r\n                    return teacher._id !== action.payload.teacher._id\r\n                })\r\n            };\r\n            break;\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n}\r\n\r\nexport default teacherReducer;","import {\r\n    USER_LOGIN,\r\n    USER_LOGOUT\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    token: null,\r\n    date: null,\r\n    user_id: \"\"\r\n}\r\n\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN:\r\n            localStorage.setItem(\"token\", action.payload.token)\r\n            localStorage.setItem(\"date\", action.payload.date)\r\n            localStorage.setItem(\"user_id\", action.payload.user_id)\r\n            return {\r\n                ...state,\r\n                token: localStorage.getItem(\"token\"),\r\n                date: localStorage.getItem(\"date\"),\r\n                user_id: localStorage.getItem(\"user_id\")\r\n            };\r\n            break;\r\n        case USER_LOGOUT:\r\n            localStorage.removeItem(\"token\")\r\n            localStorage.removeItem(\"date\")\r\n            localStorage.removeItem(\"user_id\")\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                date: null,\r\n                user_id: null\r\n            };\r\n            break;\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import {\r\n    ADD_CLASS,\r\n    DELETE_CLASS,\r\n    EDIT_CLASS,\r\n    GET_ALL_CLASSES,\r\n    GET_CLASSES_BY_NAME,\r\n    GET_CLASS_BY_ID\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    classes: [],\r\n    classItem: {}\r\n}\r\n\r\nconst classReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_CLASS:\r\n            return {\r\n                ...state,\r\n                classes: state.classes.concat(action.payload.classItem)\r\n            };\r\n            break;\r\n        case EDIT_CLASS:\r\n            return {\r\n                ...state,\r\n                classes: state.classes.map(classItem => {\r\n                    if (classItem._id === action.payload.classItem._id) {\r\n                        return action.payload.classItem\r\n                    }\r\n                    return classItem;\r\n                })\r\n            };\r\n        case GET_ALL_CLASSES:\r\n            return {\r\n                ...state,\r\n                classes: action.payload.classes\r\n            }\r\n            break;\r\n        case GET_CLASS_BY_ID:\r\n            return {\r\n                ...state,\r\n                classItem: action.payload.classItem\r\n            }\r\n            break;\r\n        case GET_CLASSES_BY_NAME:\r\n            return {\r\n                ...state,\r\n                classes: action.payload.classes\r\n            }\r\n            break;\r\n        case DELETE_CLASS:\r\n            return {\r\n                ...state,\r\n                classes: state.classes.filter(classItem => {\r\n                    return classItem._id !== action.payload.deletedClassID\r\n                })\r\n            }\r\n            break;\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n}\r\n\r\nexport default classReducer;","import adminReducer from \"./adminReducer\";\r\nimport messageReducer from \"./messageReducer\";\r\nimport studentReducer from \"./studentReducer\";\r\nimport teacherReducer from \"./teacherReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport classReducer from \"./classReducer\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    adminReducer,\r\n    messageReducer,\r\n    studentReducer,\r\n    teacherReducer,\r\n    userReducer,\r\n    classReducer\r\n})\r\n\r\nexport default rootReducer;","import {createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\n\r\nconst store = createStore(rootReducer, compose(applyMiddleware(\r\n    thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n))\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"popper.js/dist/popper\";\nimport \"jquery/dist/jquery\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./config/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}