{"version":3,"sources":["config/routes.js","utils/userGetter.js","components/partial/Navbar.js","actions/types.js","components/partial/Logout.js","actions/userActions.js","components/main/Home.js","components/partial/MessageAlert.js","actions/messageActions.js","actions/classActions.js","components/class/AddClassForm.js","components/class/ClassItem.js","components/class/ListOfClasses.js","components/class/EditClassForm.js","actions/studentActions.js","components/student/StudentItem.js","actions/teacherActions.js","components/teacher/TeacherItem.js","components/class/ClassDetail.js","components/student/AddStudentForm.js","components/student/EditStudentForm.js","components/student/StudentList.js","components/student/StudentLoginForm.js","components/student/StudentDetail.js","components/teacher/AddTeacherForm.js","components/teacher/EditTeacherForm.js","components/teacher/TeacherList.js","components/teacher/TeacherLoginForm.js","components/teacher/TeacherDetail.js","actions/adminActions.js","components/admin/AdminItem.js","components/admin/AdminList.js","components/admin/AdminLoginForm.js","components/admin/AdminSignUpForm.js","App.js","serviceWorker.js","reducers/adminReducer.js","reducers/messageReducer.js","reducers/studentReducer.js","reducers/teacherReducer.js","reducers/userReducer.js","reducers/classReducer.js","reducers/rootReducer.js","config/store.js","index.js"],"names":["MAIN_PROXY_URL","allStudentsURL","getStudentByIDURL","student_id","getStudentByClassNameURL","class_name","addStudentURL","studentLoginURL","allTeachersURL","getTeacherByIDURL","teacher_id","getTeacherByClassNameURL","addTeacherURL","teacherLoginURL","allAdminsURL","getAdminByIDURL","admin_id","addAdminURL","adminLoginURL","allClassesURL","getClassByIDURL","class_id","addClassURL","userGetter","user_id","a","user","undefined","axios","get","res","data","Navbar","state","localStorage","getItem","this","setState","role","assigned_classroom","logoutNavLink","className","to","teacherNavLinks","studentNavLinks","adminNavLinks","type","data-toggle","data-target","aria-controls","aria-expanded","aria-label","id","Component","SET_MESSAGE","Logout","props","userLogout","history","push","window","location","reload","connect","dispatch","Home","MessageAlert","setTimeout","clearMessage","message","msg_type","renderedMessage","messageReducer","getAllClasses","classes","success","payload","console","log","response","AddClassForm","onChange","e","target","value","onCreateClass","preventDefault","addClass","onSubmit","name","placeholder","required","minLength","maxLength","newClass","post","classItem","ClassItem","deleteClass","_id","created_date","onClick","deletedClassID","delete","ListOfClasses","classList","map","key","classReducer","EditClassForm","class_item","editClass","match","params","updatedClass","put","deleteStudent","deletedStudent","student","StudentItem","studentItem","dob","buttons","deleteTeacher","deletedTeacher","teacher","TeacherItem","teacherItem","ClassDetail","students","studentList","length","AddStudentForm","phone_number","address","email","password","onAddStudent","addStudent","classItems","index","method","defaultValue","selected","disabled","newStudent","EditStudentForm","student_item","onEditStudent","editStudent","updatedStudent","StudentList","getAllStudents","studentReducer","StudentLoginForm","onStudentLogin","studentLogin","studentAccount","token","date","Date","now","StudentDetail","AddTeacherForm","onAddTeacher","addTeacher","newTeacher","EditTeacherForm","teacher_item","onEditTeacher","editTeacher","updatedTeacher","TeacherList","getAllTeachers","teacherList","teachers","teacherReducer","TeacherLoginForm","onTeacherLogin","teacherLogin","teacherAccount","TeacherDetail","adminLogin","adminAccount","AdminItem","adminItem","verified","AdminList","getAllAdmins","adminList","admins","adminReducer","AdminLoginForm","onAdminLogin","AdminSignUpForm","addAdmin","newAdmin","admin","App","path","component","exact","ClassList","StudentDetails","Boolean","hostname","initialState","action","filter","userReducer","setItem","removeItem","concat","rootReducer","combineReducers","store","createStore","compose","applyMiddleware","thunk","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error"],"mappings":"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","file":"static/js/main.8e9f4fa7.chunk.js","sourcesContent":["const MAIN_PROXY_URL = \"https://node-js-sms-backend-123.herokuapp.com\";\r\n\r\nexport const allStudentsURL = `${MAIN_PROXY_URL}/students`;\r\nexport const getStudentsByNameURL = (student_name) => {\r\n    return `${MAIN_PROXY_URL}/students?student_name=${student_name}`\r\n}\r\nexport const getStudentByIDURL = (student_id) => {\r\n    return `${MAIN_PROXY_URL}/students/${student_id}`\r\n}\r\nexport const getStudentByClassNameURL = (class_name) => {\r\n    return `${MAIN_PROXY_URL}/students/class_name/${class_name}`\r\n}\r\nexport const addStudentURL = `${MAIN_PROXY_URL}/students/add`;\r\nexport const getEditStudentURL = (student_id) => {\r\n    return `${MAIN_PROXY_URL}/students/edit/${student_id}`\r\n}\r\nexport const getDeleteStudentURL = (student_id) => {\r\n    return `${MAIN_PROXY_URL}/students/delete/${student_id}`\r\n}\r\nexport const studentLoginURL = `${MAIN_PROXY_URL}/students/login`\r\n\r\n\r\n\r\n\r\nexport const allTeachersURL = `${MAIN_PROXY_URL}/teachers`;\r\nexport const getTeachersByNameURL = (teacher_name) => {\r\n    return `${MAIN_PROXY_URL}/teachers?teacher_name=${teacher_name}`\r\n}\r\nexport const getTeacherByIDURL = (teacher_id) => {\r\n    return `${MAIN_PROXY_URL}/teachers/${teacher_id}`\r\n}\r\nexport const getTeacherByClassNameURL = (class_name) => {\r\n    return `${MAIN_PROXY_URL}/teachers/class_name/${class_name}`\r\n}\r\nexport const addTeacherURL = `${MAIN_PROXY_URL}/teachers/add`;\r\nexport const getEditTeacherURL = (teacher_id) => {\r\n    return `${MAIN_PROXY_URL}/teachers/edit/${teacher_id}`\r\n}\r\nexport const getDeleteTeacherURL = (teacher_id) => {\r\n    return `${MAIN_PROXY_URL}/teachers/delete/${teacher_id}`\r\n}\r\nexport const teacherLoginURL = `${MAIN_PROXY_URL}/teachers/login`\r\n\r\n\r\n\r\n\r\nexport const allAdminsURL = `${MAIN_PROXY_URL}/admins`;\r\nexport const getAdminByIDURL = (admin_id) => {\r\n    return `${MAIN_PROXY_URL}/admins/${admin_id}`\r\n}\r\nexport const addAdminURL = `${MAIN_PROXY_URL}/admins/add`;\r\nexport const getEditAdminURL = (admin_id) => {\r\n    return `${MAIN_PROXY_URL}/admins/edit/${admin_id}`\r\n}\r\nexport const adminLoginURL = `${MAIN_PROXY_URL}/admins/login`\r\n\r\n\r\nexport const allClassesURL = `${MAIN_PROXY_URL}/classes`;\r\nexport const getClassesByNameURL = (class_name) => {\r\n    return `${MAIN_PROXY_URL}/classes?class_name=${class_name}`\r\n}\r\nexport const getClassByIDURL = (class_id) => {\r\n    return `${MAIN_PROXY_URL}/classes/${class_id}`\r\n}\r\nexport const addClassURL = `${MAIN_PROXY_URL}/classes/add`;\r\nexport const getEditClassURL = (class_id) => {\r\n    return `${MAIN_PROXY_URL}/classes/edit/${class_id}`\r\n}\r\nexport const getDeleteClassURL = (class_id) => {\r\n    return `${MAIN_PROXY_URL}/classes/delete/${class_id}`\r\n}","import axios from \"axios\";\r\nimport {\r\n    getTeacherByIDURL,\r\n    getStudentByIDURL,\r\n    getAdminByIDURL\r\n} from \"../config/routes\";\r\n\r\nexport const userGetter = async (user_id) => {\r\n    let user = null;\r\n\r\n    if (user_id == null || user_id == undefined){\r\n        return {};\r\n    }\r\n\r\n    let res = await axios.get(getTeacherByIDURL(user_id));\r\n    user = res.data.data;\r\n\r\n    if (user == null) {\r\n        let res = await axios.get(getStudentByIDURL(user_id));\r\n        user = res.data.data;\r\n    }\r\n\r\n    if (user == null) {\r\n        let res = await axios.get(getAdminByIDURL(user_id));\r\n        user = res.data.data;\r\n    }\r\n\r\n    return user;\r\n}","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\n\r\nclass Navbar extends Component {\r\n\r\n    state = {\r\n        user: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const user_id = localStorage.getItem(\"user_id\")\r\n        let user = {};\r\n\r\n        user = await userGetter(user_id)\r\n\r\n        this.setState({\r\n            user\r\n        })\r\n    }\r\n\r\nrender() {\r\n    const {role, assigned_classroom} = this.state.user;\r\n    const user_id = localStorage.getItem(\"user_id\")\r\n\r\n    const logoutNavLink = user_id === null || user_id === undefined ? (\r\n        <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/\">Login</Link>\r\n        </li>\r\n    ) : (\r\n        <li className=\"nav-item\">\r\n            <Link className=\"nav-link text-danger\" to=\"/logout\">Logout</Link>\r\n        </li>\r\n    )\r\n\r\n    const teacherNavLinks = role === \"teacher\" ? (\r\n        <>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to={`/teachers/details/${user_id}`}>Profile</Link>\r\n            </li>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to={`/classes/details/${assigned_classroom}`}>Your Class</Link>\r\n            </li>\r\n        </>\r\n    ) : (\"\")\r\n\r\n    const studentNavLinks = role === \"student\" ? (\r\n        <>\r\n            <li className=\"nav-item\">\r\n                <Link className=\"nav-link\" to={`/students/details/${user_id}`}>Profile</Link>\r\n            </li>\r\n        </>\r\n    ) : (\"\")\r\n\r\n    const adminNavLinks = role === \"admin\" ? (\r\n        <>\r\n        <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/classes\">Classes</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/students\">Students</Link>\r\n        </li>\r\n        <li className=\"nav-item\">\r\n            <Link className=\"nav-link\" to=\"/teachers\">Teachers</Link>\r\n        </li>\r\n        </>\r\n    ) : (\"\")\r\n\r\nreturn (\r\n<nav className=\"navbar navbar-expand-lg navbar-dark bg-dark\">\r\n<div className=\"container\"> \r\n    <h1 className=\"navbar-brand\">\r\n        CMS System\r\n    </h1>\r\n    <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarNav\"\r\n        aria-controls=\"navbarNav\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n        <span className=\"navbar-toggler-icon\"></span>\r\n    </button>\r\n    <div className=\"collapse navbar-collapse\" id=\"navbarNav\">\r\n        <ul className=\"navbar-nav ml-auto\">\r\n            \r\n            {teacherNavLinks}\r\n            {studentNavLinks}\r\n            {adminNavLinks}\r\n            {logoutNavLink}\r\n            \r\n        </ul>\r\n    </div>\r\n    </div>\r\n</nav>\r\n)\r\n}\r\n}\r\n\r\nexport default Navbar;","export const GET_ALL_STUDENTS = \"GET_ALL_STUDENTS\"\r\nexport const GET_STUDENT_BY_ID = \"GET_STUDENT_BY_ID\"\r\nexport const GET_STUDENTS_BY_NAME = \"GET_STUDENTS_BY_NAME\"\r\nexport const ADD_STUDENT = \"ADD_STUDENT\"\r\nexport const EDIT_STUDENT = \"EDIT_STUDENT\"\r\nexport const DELETE_STUDENT = \"DELETE_STUDENT\"\r\n\r\nexport const GET_ALL_TEACHERS = \"GET_ALL_TEACHERS\"\r\nexport const GET_TEACHER_BY_ID = \"GET_TEACHER_BY_ID\"\r\nexport const GET_TEACHERS_BY_NAME = \"GET_TEACHERS_BY_NAME\"\r\nexport const ADD_TEACHER = \"ADD_TEACHER\"\r\nexport const EDIT_TEACHER = \"EDIT_TEACHER\"\r\nexport const DELETE_TEACHER = \"DELETE_TEACHER\"\r\n\r\nexport const GET_ALL_CLASSES = \"GET_ALL_CLASSES\"\r\nexport const GET_CLASS_BY_ID = \"GET_CLASS_BY_ID\"\r\nexport const GET_CLASSES_BY_NAME = \"GET_CLASSES_BY_NAME\"\r\nexport const ADD_CLASS = \"ADD_CLASS\"\r\nexport const EDIT_CLASS = \"EDIT_CLASS\"\r\nexport const DELETE_CLASS = \"DELETE_CLASS\"\r\n\r\nexport const GET_ALL_ADMINS = \"GET_ALL_ADMINS\"\r\nexport const GET_ADMIN_BY_ID = \"GET_ADMIN_BY_ID\"\r\nexport const EDIT_ADMIN = \"EDIT_ADMIN\"\r\nexport const ADD_ADMIN = \"ADD_ADMIN\"\r\n\r\nexport const USER_LOGIN = \"USER_LOGIN\"\r\nexport const USER_LOGOUT = \"USER_LOGOUT\"\r\n\r\nexport const SET_MESSAGE = \"SET_MESSAGE\"\r\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\"\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {userLogout} from \"../../actions/userActions\";\r\n\r\nclass Logout extends Component {\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem(\"token\") !== undefined){\r\n            this.props.userLogout();\r\n        }\r\n        this.props.history.push(\"/\");\r\n        window.location.reload();\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        userLogout: () => {dispatch(userLogout())}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(Logout);\r\n","import {\r\n    USER_LOGIN,\r\n    USER_LOGOUT\r\n} from \"./types\";\r\n\r\nexport const userLogin = (token, user_id) => {\r\n    return (dispatch) => {\r\n        return dispatch({\r\n            type: USER_LOGIN,\r\n            payload: {\r\n                user_id,\r\n                token,\r\n                date: Date.now()\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const userLogout = () => {\r\n    return (dispatch) => {\r\n        return dispatch({\r\n            type: USER_LOGOUT\r\n        })\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass Home extends Component {\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"home-login\">\r\n                    <h1>Student Management System</h1>\r\n                    <Link to=\"/students/login\" className=\"btn btn-primary btn-block\">Login as Student</Link>\r\n                    <Link to=\"/teachers/login\" className=\"btn btn-success btn-block\">Login as Teacher</Link>\r\n                    <Link to=\"/admins/login\" className=\"btn btn-info btn-block\">Login as Admin</Link>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Home;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {clearMessage} from \"../../actions/messageActions\";\r\n\r\nclass MessageAlert extends Component {\r\n\r\n    componentDidMount() {\r\n        setTimeout(() => {\r\n            this.props.clearMessage();\r\n        }, 300)\r\n    }\r\n\r\n    render() {\r\n        const {message, msg_type} = this.props;\r\n        let renderedMessage = message;\r\n\r\n        return (\r\n            <div className={`alert alert-${msg_type}`} role=\"alert\">\r\n                {renderedMessage}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        message: state.messageReducer.message,\r\n        msg_type: state.messageReducer.msg_type\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        clearMessage: () => {dispatch(clearMessage())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(MessageAlert);\r\n","import {\r\n    SET_MESSAGE,\r\n    CLEAR_MESSAGE\r\n} from \"./types\";\r\n\r\nexport const setMessage = (message) => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: SET_MESSAGE,\r\n            payload: {\r\n                message\r\n            }\r\n        })\r\n    }\r\n}\r\n\r\nexport const clearMessage = () => {\r\n    return (dispatch) => {\r\n        dispatch({\r\n            type: CLEAR_MESSAGE\r\n        })\r\n    }\r\n}\r\n\r\n","import {\r\n    ADD_CLASS,\r\n    DELETE_CLASS,\r\n    EDIT_CLASS,\r\n    GET_ALL_CLASSES,\r\n    GET_CLASSES_BY_NAME,\r\n    GET_CLASS_BY_ID,\r\n    SET_MESSAGE,\r\n    CLEAR_MESSAGE\r\n} from \"../actions/types\";\r\nimport axios from \"axios\";\r\nimport {\r\n    addClassURL,\r\n    allClassesURL,\r\n    getClassByIDURL,\r\n    getClassesByNameURL,\r\n    getDeleteClassURL,\r\n    getEditClassURL\r\n} from \"../config/routes\";\r\n\r\nexport const getAllClasses = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            let classes = [];\r\n            const res = await axios.get(allClassesURL)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            classes = data\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_ALL_CLASSES,\r\n                payload: {\r\n                    classes\r\n                }\r\n            })\r\n        } catch (error) {\r\n            console.log(error)\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getClassByID = (class_id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(getClassByIDURL(class_id))\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const classItem = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_CLASS_BY_ID,\r\n                payload: {\r\n                    classItem,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getClassesByName = (class_name) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(getClassesByNameURL(class_name))\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const classes = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_CLASSES_BY_NAME,\r\n                payload: {\r\n                    classes,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const addClass = (newClass) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post(addClassURL, newClass)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const classItem = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n            return dispatch({\r\n                type: ADD_CLASS,\r\n                payload: {\r\n                    classItem\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const editClass = (updatedClass) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.put(getEditClassURL(updatedClass._id), updatedClass)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const classItem = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n            return dispatch({\r\n                type: EDIT_CLASS,\r\n                payload: {\r\n                    classItem\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteClass = (deletedClassID) => {\r\n    console.log(deletedClassID)\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.delete(getDeleteClassURL(deletedClassID))\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n\r\n            console.log(data)\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n            return dispatch({\r\n                type: DELETE_CLASS,\r\n                payload: {\r\n                    deletedClassID\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport MessageAlert from \"../partial/MessageAlert\";\r\nimport {connect} from \"react-redux\";\r\nimport {addClass} from \"../../actions/classActions\";\r\n\r\nclass AddClassForm extends Component {\r\n\r\n    state = {\r\n        class_name: \"\"\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onCreateClass = (e) => {\r\n        e.preventDefault();\r\n        const {class_name} = this.state;\r\n\r\n        this.props.addClass({class_name})\r\n\r\n        this.setState({\r\n            class_name: \"\"\r\n        }, () => {\r\n            this.props.history.push(\"/classes\");\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n        const {class_name} = this.state;\r\n\r\n        return (\r\n            <div className=\"container text-center\">\r\n                <h1>Add Student Form</h1>\r\n                <MessageAlert/>\r\n                <form onSubmit={this.onCreateClass}>\r\n                    <div className=\"form-group\">\r\n                        <label>Class Name:</label>\r\n                        <input type=\"text\" id=\"class_name\" name=\"class_name\" className=\"form-control\" placeholder=\"Class Name\" value={class_name} onChange={this.onChange} required minLength=\"5\" maxLength=\"12\"/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-block btn-primary\">\r\n                            Create Class\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addClass: (newClass) => {dispatch(addClass(newClass))}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AddClassForm);\r\n","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {deleteClass} from \"../../actions/classActions\";\r\nimport {connect} from \"react-redux\";\r\n\r\nclass ClassItem extends Component {\r\n\r\n    render() {\r\n        const {classItem, deleteClass} = this.props; \r\n        const {class_name, _id, created_date} = classItem;\r\n\r\n        return (\r\n            <div className=\"list-group-item\">\r\n                <div>\r\n                    <Link to={`/classes/details/${class_name}`}>\r\n                        <h4>{class_name}</h4>\r\n                    </Link>\r\n                    <h5>Created Date: {created_date}</h5>\r\n                </div>\r\n                    <ul>\r\n                        <li>\r\n                            <Link className=\"btn btn-warning\" to={`/classes/edit/${_id}`}>Edit</Link>\r\n                        </li>\r\n                        <li>\r\n                            <button onClick={() => deleteClass(_id)} className=\"btn btn-danger\">Delete</button>\r\n                        </li>\r\n                    </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteClass: (deletedClassID) => {dispatch(deleteClass(deletedClassID))}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(ClassItem);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {getAllClasses} from \"../../actions/classActions\";\r\nimport ClassItem from \"./ClassItem\";\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass ListOfClasses extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.getAllClasses();\r\n    }\r\n\r\n    render() {\r\n        const classList = this.props.classes.map(classItem => {\r\n            return <ClassItem classItem={classItem} key={classItem._id}/>\r\n        })\r\n        \r\n        return (\r\n            <div className=\"container\">\r\n                <Link to=\"/classes/add\" className=\"btn btn-primary\">Add Class</Link>\r\n                <div className=\"list-group\">\r\n                    {classList}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        classes: state.classReducer.classes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAllClasses: () => {dispatch(getAllClasses())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(ListOfClasses);\r\n","import React, { Component } from 'react';\r\nimport MessageAlert from \"../partial/MessageAlert\";\r\nimport axios from \"axios\";\r\nimport {getClassByIDURL} from \"../../config/routes\";\r\nimport {connect} from \"react-redux\";\r\nimport {editClass} from \"../../actions/classActions\"\r\n\r\nclass EditClassForm extends Component {\r\n\r\n    state = {\r\n        class_name: \"\",\r\n        class_item: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const res = await axios.get(getClassByIDURL(this.props.match.params.class_id))\r\n        const data = res.data.data;\r\n        this.setState({\r\n            class_name: data.class_name,\r\n            class_item: data\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onCreateClass = (e) => {\r\n        e.preventDefault();\r\n        const {class_name, class_item} = this.state;\r\n\r\n        class_item.class_name = class_name;\r\n\r\n        this.props.editClass(class_item)\r\n\r\n        this.setState({\r\n            class_name: \"\",\r\n            class_item: {}\r\n        }, () => {\r\n            this.props.history.push(\"/classes\");\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {class_name} = this.state;\r\n\r\n        return (\r\n            <div className=\"container text-center\">\r\n                <h1>Edit Student Form</h1>\r\n                <MessageAlert/>\r\n                <form onSubmit={this.onCreateClass}>\r\n                    <div className=\"form-group\">\r\n                        <label>Class Name:</label>\r\n                        <input type=\"text\" id=\"class_name\" name=\"class_name\" className=\"form-control\" placeholder=\"Class Name\" value={class_name} onChange={this.onChange} required minLength=\"5\" maxLength=\"12\"/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button className=\"btn btn-block btn-primary\">\r\n                            Update Class\r\n                        </button>\r\n                    </div>\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editClass: (updatedClass) => dispatch(editClass(updatedClass))\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(EditClassForm);\r\n","import {\r\n    ADD_STUDENT,\r\n    DELETE_STUDENT,\r\n    EDIT_STUDENT,\r\n    GET_ALL_STUDENTS,\r\n    GET_STUDENTS_BY_NAME,\r\n    GET_STUDENT_BY_ID,\r\n    SET_MESSAGE,\r\n    USER_LOGIN\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\nimport {\r\n    allStudentsURL,\r\n    addStudentURL,\r\n    getDeleteStudentURL,\r\n    getEditStudentURL,\r\n    getStudentByIDURL,\r\n    getStudentsByNameURL,\r\n    studentLoginURL\r\n} from \"../config/routes\";\r\n\r\nexport const getAllStudents = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(allStudentsURL)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const students = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_ALL_STUDENTS,\r\n                payload: {\r\n                    students,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getStudentByID = (student_id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(getStudentByIDURL(student_id))\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const student = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_STUDENT_BY_ID,\r\n                payload: {\r\n                    student,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getStudentsByName = (student_name) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(getStudentsByNameURL(student_name))\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const students = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_STUDENTS_BY_NAME,\r\n                payload: {\r\n                    students,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const addStudent = (newStudent) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post(addStudentURL, newStudent)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const student = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n\r\n            return dispatch({\r\n                type: ADD_STUDENT,\r\n                payload: {\r\n                    student\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const editStudent = (updatedStudent) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.put(getEditStudentURL(updatedStudent._id), updatedStudent)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const student = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n\r\n            return dispatch({\r\n                type: EDIT_STUDENT,\r\n                payload: {\r\n                    student\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteStudent = (deletedStudent) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.delete(getDeleteStudentURL(deletedStudent._id))\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const student = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n\r\n            return dispatch({\r\n                type: DELETE_STUDENT,\r\n                payload: {\r\n                    student\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const studentLogin = (studentAccount) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post(studentLoginURL, studentAccount)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const {token} = res.data;\r\n            const user_id = data._id;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (data === null) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message: \"Wrong email or password\",\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: USER_LOGIN,\r\n                payload: {\r\n                    user_id,\r\n                    token,\r\n                    date: Date.now()\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {deleteStudent} from \"../../actions/studentActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\n\r\nclass StudentItem extends Component {\r\n\r\n    state = {\r\n        role: \"\"\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id)\r\n\r\n        this.setState({\r\n            role: user.role\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const studentItem = this.props.studentItem;\r\n        const {\r\n            _id,\r\n            name,\r\n            dob\r\n        } = studentItem\r\n\r\n        const buttons = this.state.role === \"admin\" ? (\r\n            <ul>\r\n                <li>\r\n                    <Link className=\"btn btn-warning\" to={`/students/edit/${_id}`}>Edit</Link>\r\n                </li>\r\n                <li>\r\n                    <button onClick={() => deleteStudent(studentItem)} className=\"btn btn-danger\">Delete</button>\r\n                </li>\r\n            </ul>\r\n        ) : (\"\")\r\n\r\n        return (\r\n            <div className=\"list-group-item\">\r\n                <div>\r\n                    <Link to={`/students/details/${_id}`}>\r\n                        <h4>{name}</h4>\r\n                    </Link>\r\n                    <h5>Date of Birth: {dob}</h5>\r\n                </div>\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteStudent: (deletedStudent) => {dispatch(deleteStudent(deletedStudent))}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(StudentItem);\r\n","import {\r\n    ADD_TEACHER,\r\n    DELETE_TEACHER,\r\n    EDIT_TEACHER,\r\n    GET_ALL_TEACHERS,\r\n    GET_TEACHERS_BY_NAME,\r\n    GET_TEACHER_BY_ID,\r\n    SET_MESSAGE,\r\n    USER_LOGIN\r\n} from \"./types\";\r\nimport axios from \"axios\";\r\nimport {\r\n    addTeacherURL,\r\n    allTeachersURL,\r\n    getDeleteTeacherURL,\r\n    getEditTeacherURL,\r\n    getTeacherByIDURL,\r\n    getTeachersByNameURL,\r\n    teacherLoginURL\r\n} from \"../config/routes\";\r\n\r\nexport const getAllTeachers = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(allTeachersURL)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const teachers = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_ALL_TEACHERS,\r\n                payload: {\r\n                    teachers,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getTeacherByID = (teacher_id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(getTeacherByIDURL(teacher_id))\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const teacher = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_TEACHER_BY_ID,\r\n                payload: {\r\n                    teacher,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getTeachersByName = (teacher_name) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(getTeachersByNameURL(teacher_name))\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const teachers = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_TEACHERS_BY_NAME,\r\n                payload: {\r\n                    teachers,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const addTeacher = (newTeacher) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post(addTeacherURL, newTeacher)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const teacher = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n\r\n            return dispatch({\r\n                type: ADD_TEACHER,\r\n                payload: {\r\n                    teacher\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const editTeacher = (updatedTeacher) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.put(getEditTeacherURL(updatedTeacher._id), updatedTeacher)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const teacher = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n\r\n            return dispatch({\r\n                type: EDIT_TEACHER,\r\n                payload: {\r\n                    teacher\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const deleteTeacher = (deletedTeacher) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.delete(getDeleteTeacherURL(deletedTeacher._id))\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const teacher = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n\r\n            return dispatch({\r\n                type: DELETE_TEACHER,\r\n                payload: {\r\n                    teacher\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const teacherLogin = (teacherAccount) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post(teacherLoginURL, teacherAccount)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const {token} = res.data;\r\n            const user_id = data._id;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (data === null) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message: \"Wrong email or password\",\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: USER_LOGIN,\r\n                payload: {\r\n                    user_id,\r\n                    token,\r\n                    date: Date.now()\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\nimport {deleteTeacher} from \"../../actions/teacherActions\";\r\nimport {connect} from \"react-redux\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\n\r\nclass TeacherItem extends Component {\r\n\r\n    state = {\r\n        role: \"\"\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id)\r\n\r\n        this.setState({\r\n            role: user.role\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const teacherItem = this.props.teacherItem;\r\n        const {\r\n            _id,\r\n            name,\r\n            dob\r\n        } = teacherItem\r\n\r\n        const buttons = this.state.role === \"admin\" ? (\r\n            <ul>\r\n                        <li>\r\n                            <Link className=\"btn btn-warning\" to={`/teachers/edit/${_id}`}>Edit</Link>\r\n                        </li>\r\n                        <li>\r\n                            <button onClick={() => deleteTeacher(teacherItem)} className=\"btn btn-danger\">Delete</button>\r\n                        </li>\r\n                    </ul>\r\n        ) : (\"\")\r\n\r\n        return (\r\n            <div className=\"list-group-item\">\r\n                <div>\r\n                    <Link to={`/teachers/details/${_id}`}>\r\n                        <h4>{name}</h4>\r\n                    </Link>\r\n                    <h5>Date of Birth: {dob}</h5>\r\n                </div>\r\n                    {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        deleteTeacher: (deletedTeacher) => {dispatch(deleteTeacher(deletedTeacher))}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(TeacherItem);\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport {getStudentByClassNameURL, getTeacherByClassNameURL} from \"../../config/routes\";\r\nimport StudentItem from \"../student/StudentItem\";\r\nimport TeacherItem from \"../teacher/TeacherItem\";\r\n\r\nclass ClassDetail extends Component {\r\n\r\n    state = {\r\n        teacher: {},\r\n        students: []\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const {class_name} = this.props.match.params;\r\n\r\n        let res = await axios.get(getStudentByClassNameURL(class_name));\r\n        const students = res.data.data;\r\n\r\n        res = await axios.get(getTeacherByClassNameURL(class_name));\r\n        const teacher = res.data.data;\r\n\r\n        this.setState({\r\n            students,\r\n            teacher\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {students, teacher} = this.state;\r\n\r\n        const studentList = students.length === 0 ? (\r\n            <h2>There is no student in this class</h2>\r\n        ) : students.map(studentItem => {\r\n            return <StudentItem studentItem={studentItem}/>\r\n        })\r\n\r\n        const teacherItem = teacher === null ? (\r\n            <h2>There is no teacher in this class</h2>\r\n        ) : (\r\n            <TeacherItem teacherItem={teacher}/>\r\n        ) \r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h2>Teacher</h2>\r\n                <ul className=\"list-group\">\r\n                    {teacherItem}\r\n                </ul>\r\n                <h2>Students</h2>\r\n                <ul className=\"list-group\">\r\n                    {studentList}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ClassDetail;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {addStudent} from \"../../actions/studentActions\";\r\nimport {getAllClasses} from \"../../actions/classActions\";\r\nimport MessageAlert from \"../partial/MessageAlert\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\n\r\nclass AddStudentForm extends Component {\r\n\r\n    state = {\r\n        name: \"\",\r\n        phone_number: \"\",\r\n        dob: \"\",\r\n        address: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        assigned_classroom: \"\"\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id)\r\n\r\n        if (user == null || user.role != \"admin\"){\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        if (user.role == \"student\") {\r\n            this.props.history.push(`/students/details/${user_id}`);\r\n        }\r\n\r\n        if (user.role == \"teacher\") {\r\n            this.props.history.push(`/teachers/details/${user_id}`);\r\n        }\r\n\r\n        this.props.getAllClasses()\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onAddStudent = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            email,\r\n            password,\r\n            assigned_classroom\r\n        } = this.state;\r\n\r\n        this.props.addStudent({\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            email,\r\n            password,\r\n            assigned_classroom\r\n        })\r\n\r\n        this.setState({\r\n            name: \"\",\r\n            phone_number: \"\",\r\n            dob: \"\",\r\n            address: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n        }, () => {\r\n            //this.props.history.push(\"/students\");\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            email,\r\n            password,\r\n            assigned_classroom\r\n        } = this.state;\r\n\r\n        const classItems = this.props.classes.map((classItem, index) => {\r\n            /*\r\n            if (index === 0){\r\n                return <option key={classItem._id} selected value={classItem.class_name}>\r\n                    {classItem.class_name}\r\n                </option>\r\n            }\r\n            */\r\n            return <option key={classItem._id} value={classItem.class_name}>\r\n                {classItem.class_name}\r\n            </option>\r\n        })\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Add Student Form</h1>\r\n                <MessageAlert/>\r\n\r\n                <form onSubmit={this.onAddStudent} method=\"POST\">\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Name:</label>\r\n                        <input className=\"form-control\" placeholder=\"Name\" type=\"text\" id=\"name\" name=\"name\" onChange={this.onChange} required value={name}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Phone Number:</label>\r\n                        <input className=\"form-control\" placeholder=\"Phone Number\" type=\"text\" id=\"phone_number\" name=\"phone_number\" onChange={this.onChange} required value={phone_number}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Date of Birth:</label>\r\n                        <input className=\"form-control\" type=\"date\" id=\"dob\" name=\"dob\" onChange={this.onChange}required value={dob}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Email:</label>\r\n                        <input className=\"form-control\" placeholder=\"Email\" type=\"email\" id=\"email\" name=\"email\" onChange={this.onChange} required value={email}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password:</label>\r\n                        <input className=\"form-control\" placeholder=\"Password\" type=\"password\" id=\"password\" name=\"password\" onChange={this.onChange} required value={password}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Address:</label>\r\n                        <textarea className=\"form-control\" placeholder=\"Address\" id=\"address\" name=\"address\" onChange={this.onChange} value={address}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Assigned Classroom:</label>\r\n                        <select required id=\"assigned_classroom\" className=\"custom-select\" onChange={this.onChange}>\r\n                            <option key=\"0\" value=\"none\" defaultValue selected disabled>\r\n                                None\r\n                            </option>\r\n                            {classItems}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Create Student</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        classes: state.classReducer.classes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addStudent: (newStudent) => {dispatch(addStudent(newStudent))},\r\n        getAllClasses: () => {dispatch(getAllClasses())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddStudentForm);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {editStudent} from \"../../actions/studentActions\";\r\nimport {getAllClasses} from \"../../actions/classActions\";\r\nimport MessageAlert from \"../partial/MessageAlert\";\r\nimport axios from \"axios\";\r\nimport {getStudentByIDURL} from \"../../config/routes\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\n\r\nclass EditStudentForm extends Component {\r\n\r\n    state = {\r\n        name: \"\",\r\n        phone_number: \"\",\r\n        dob: \"\",\r\n        address: \"\",\r\n        assigned_classroom: \"\",\r\n        student_item: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id)\r\n\r\n        if (user == null || user.role != \"admin\"){\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        if (user.role == \"student\") {\r\n            this.props.history.push(`/students/details/${user_id}`);\r\n        }\r\n\r\n        if (user.role == \"teacher\") {\r\n            this.props.history.push(`/teachers/details/${user_id}`);\r\n        }\r\n\r\n        this.props.getAllClasses()\r\n\r\n        const res = await axios.get(getStudentByIDURL(this.props.match.params.student_id))\r\n        const {\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            assigned_classroom,\r\n        } = res.data.data;\r\n        this.setState({\r\n            student_item: res.data.data,\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            assigned_classroom,\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onEditStudent = (e) => {\r\n        const {\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            assigned_classroom,\r\n            student_item\r\n        } = this.state;\r\n\r\n        student_item.name = name;\r\n        student_item.phone_number = phone_number;\r\n        student_item.dob = dob;\r\n        student_item.address = address;\r\n        student_item.assigned_classroom = assigned_classroom;\r\n\r\n        this.props.editStudent(student_item)\r\n\r\n        this.setState({\r\n            name: \"\",\r\n            phone_number: \"\",\r\n            dob: \"\",\r\n            address: \"\",\r\n            assigned_classroom: \"\",\r\n            student_item: {}\r\n        }, () => {\r\n            //this.props.history.push(\"/students\");\r\n        })\r\n\r\n    }\r\n\r\n    render() {\r\n\r\n        const {class_name, name, dob, phone_number, address} = this.state;\r\n\r\n        const classItems = this.props.classes.map((classItem, index) => {\r\n            if (classItem.class_name === class_name){\r\n                return <option key={classItem._id} defaultValue selected value={classItem.class_name}>\r\n                    {classItem.class_name}\r\n                </option>\r\n            }\r\n            return <option key={classItem._id} value={classItem.class_name}>\r\n                {classItem.class_name}\r\n            </option>\r\n        })\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Edit Student Form</h1>\r\n                <MessageAlert/>\r\n\r\n                <form onSubmit={this.onEditStudent} method=\"POST\">\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Name:</label>\r\n                        <input className=\"form-control\" placeholder=\"Name\" type=\"text\" id=\"name\" name=\"name\" onChange={this.onChange} value={name} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Phone Number:</label>\r\n                        <input className=\"form-control\" placeholder=\"Phone Number\" type=\"text\" id=\"phone_number\" name=\"phone_number\" onChange={this.onChange} value={phone_number} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Date of Birth:</label>\r\n                        <input className=\"form-control\" type=\"date\" id=\"dob\" name=\"dob\" onChange={this.onChange}value={dob} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Address:</label>\r\n                        <textarea className=\"form-control\" placeholder=\"Address\" id=\"address\" name=\"address\" value={address} onChange={this.onChange}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Assigned Classroom:</label>\r\n                        <select required className=\"custom-select\" id=\"assigned_classroom\" onChange={this.onChange}>\r\n                            {classItems}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Update Student</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        classes: state.classReducer.classes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editStudent: (updatedStudent) => {dispatch(editStudent(updatedStudent))},\r\n        getAllClasses: () => {dispatch(getAllClasses())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditStudentForm);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {getAllStudents} from \"../../actions/studentActions\";\r\nimport StudentItem from \"./StudentItem\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\n\r\nclass StudentList extends Component {\r\n\r\n    async componentDidMount(){\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id)\r\n\r\n        if (user == null || user.role != \"admin\"){\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        if (user.role == \"student\") {\r\n            this.props.history.push(`/students/details/${user_id}`);\r\n        }\r\n\r\n        if (user.role == \"teacher\") {\r\n            this.props.history.push(`/teachers/details/${user_id}`);\r\n        }\r\n\r\n        this.props.getAllStudents()\r\n    }\r\n\r\n    render() {\r\n        const studentList = this.props.students.map(studentItem => {\r\n            return <StudentItem studentItem={studentItem}/>\r\n        })\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to=\"/students/add\" className=\"btn btn-primary\">Add Student</Link>\r\n                <ul className=\"list-group\">\r\n                    {studentList}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        students: state.studentReducer.students\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAllStudents: () => {dispatch(getAllStudents())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(StudentList);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {studentLogin} from \"../../actions/studentActions\";\r\nimport MessageAlert from \"../partial/MessageAlert\";\r\n\r\nclass StudentLoginForm extends Component {\r\n\r\n    state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem(\"token\") === undefined){\r\n            this.props.history.push(\"/logout\")\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onStudentLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        const {email, password} = this.state;\r\n\r\n        this.props.studentLogin({\r\n            email, password\r\n        })\r\n\r\n        setTimeout(() => {\r\n            if (localStorage.getItem(\"user_id\") != undefined){\r\n                this.props.history.push(`/students/details/${localStorage.getItem(\"user_id\")}`)\r\n                window.location.reload();\r\n            }\r\n        }, 500)\r\n        \r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container login-container\">\r\n                <h1>Student Login</h1>\r\n                <MessageAlert/>\r\n\r\n                <form onSubmit={this.onStudentLogin} method=\"POST\">\r\n                \r\n                    <div className=\"form-group\">\r\n                        <label>Email:</label>\r\n                        <input className=\"form-control\" type=\"email\" placeholder=\"Email\" id=\"email\" name=\"email\" onChange={this.onChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password:</label>\r\n                        <input className=\"form-control\" type=\"password\" placeholder=\"Password\" id=\"password\" name=\"password\" onChange={this.onChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Login</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        studentLogin: (studentAccount) => {dispatch(studentLogin(studentAccount))}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(StudentLoginForm);\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport {getStudentByIDURL} from \"../../config/routes\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\n\r\nclass StudentDetail extends Component {\r\n\r\n    state = {\r\n        student_item: {}\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id)\r\n\r\n        if (user == null){\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        const res = await axios.get(getStudentByIDURL(this.props.match.params.student_id))\r\n        this.setState({\r\n            student_item: res.data.data\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {name, dob, email, assigned_classroom, phone_number, address, created_date} = this.state.student_item\r\n\r\n        return (\r\n            <div className=\"container detail-container\">\r\n                <h1 className=\"text-center\">{name}</h1>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                        <ul>\r\n                            <li>\r\n                                <b>Date of Birth: </b>{dob}\r\n                            </li>\r\n                            <li>\r\n                                <b>Email: </b>{email}\r\n                            </li>\r\n                            <li>\r\n                                <b>Assigned Classroom: </b>{assigned_classroom}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                        <ul>\r\n                            <li>\r\n                                <b>Phone Number: </b>{phone_number}\r\n                            </li>\r\n                            <li>\r\n                                <b>Address: </b>{address}\r\n                            </li>\r\n                            <li>\r\n                                <b>Enrolled Date: </b>{created_date}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default StudentDetail;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {addTeacher} from \"../../actions/teacherActions\";\r\nimport {getAllClasses} from \"../../actions/classActions\";\r\nimport MessageAlert from \"../partial/MessageAlert\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\n\r\nclass AddTeacherForm extends Component {\r\n\r\n    state = {\r\n        name: \"\",\r\n        phone_number: \"\",\r\n        dob: \"\",\r\n        address: \"\",\r\n        email: \"\",\r\n        password: \"\",\r\n        assigned_classroom: \"\"\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id)\r\n\r\n        if (user == null || user.role != \"admin\"){\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        if (user.role == \"student\") {\r\n            this.props.history.push(`/students/details/${user_id}`);\r\n        }\r\n\r\n        if (user.role == \"teacher\") {\r\n            this.props.history.push(`/teachers/details/${user_id}`);\r\n        }\r\n\r\n        this.props.getAllClasses()\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onAddTeacher = (e) => {\r\n        e.preventDefault();\r\n        const {\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            email,\r\n            password,\r\n            assigned_classroom\r\n        } = this.state;\r\n\r\n        this.props.addTeacher({\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            email,\r\n            password,\r\n            assigned_classroom\r\n        })\r\n\r\n        this.setState({\r\n            name: \"\",\r\n            phone_number: \"\",\r\n            dob: \"\",\r\n            address: \"\",\r\n            email: \"\",\r\n            password: \"\",\r\n            assigned_classroom: \"\"\r\n        }, () => {\r\n            //this.props.history.push(\"/teachers\");\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const classItems = this.props.classes.map((classItem, index) => {\r\n            /*\r\n            if (index === 0){\r\n                return <option key={classItem._id} selected value={classItem.class_name}>\r\n                    {classItem.class_name}\r\n                </option>\r\n            }\r\n            */\r\n            return <option key={classItem._id} value={classItem.class_name}>\r\n                {classItem.class_name}\r\n            </option>\r\n        })\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Add Teacher Form</h1>\r\n                <MessageAlert/>\r\n\r\n                <form onSubmit={this.onAddTeacher} method=\"POST\">\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Name:</label>\r\n                        <input className=\"form-control\" placeholder=\"Name\" type=\"text\" id=\"name\" name=\"name\" onChange={this.onChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Phone Number:</label>\r\n                        <input className=\"form-control\" placeholder=\"Phone Number\" type=\"text\" id=\"phone_number\" name=\"phone_number\" onChange={this.onChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Date of Birth:</label>\r\n                        <input className=\"form-control\" type=\"date\" id=\"dob\" name=\"dob\" onChange={this.onChange}required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Email:</label>\r\n                        <input className=\"form-control\" placeholder=\"Email\" type=\"email\" id=\"email\" name=\"email\" onChange={this.onChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password:</label>\r\n                        <input className=\"form-control\" placeholder=\"Password\" type=\"password\" id=\"password\" name=\"password\" onChange={this.onChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Address:</label>\r\n                        <textarea className=\"form-control\" placeholder=\"Address\" id=\"address\" name=\"address\" onChange={this.onChange}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Assigned Classroom:</label>\r\n                        <select required id=\"assigned_classroom\" className=\"custom-select\" onChange={this.onChange}>\r\n                            <option key=\"0\" value=\"none\" defaultValue selected disabled>\r\n                                None\r\n                            </option>\r\n                            {classItems}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Create Teacher</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        classes: state.classReducer.classes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addTeacher: (newTeacher) => {dispatch(addTeacher(newTeacher))},\r\n        getAllClasses: () => {dispatch(getAllClasses())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AddTeacherForm);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {editTeacher} from \"../../actions/teacherActions\";\r\nimport {getAllClasses} from \"../../actions/classActions\";\r\nimport MessageAlert from \"../partial/MessageAlert\";\r\nimport axios from \"axios\";\r\nimport {getTeacherByIDURL} from \"../../config/routes\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\n\r\nclass EditTeacherForm extends Component {\r\n\r\n    state = {\r\n        name: \"\",\r\n        phone_number: \"\",\r\n        dob: \"\",\r\n        address: \"\",\r\n        assigned_classroom: \"\",\r\n        teacher_item: {}\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id)\r\n\r\n        if (user == null || user.role != \"admin\"){\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        if (user.role == \"student\") {\r\n            this.props.history.push(`/students/details/${user_id}`);\r\n        }\r\n\r\n        if (user.role == \"teacher\") {\r\n            this.props.history.push(`/teachers/details/${user_id}`);\r\n        }\r\n            \r\n        this.props.getAllClasses()\r\n\r\n        const res = await axios.get(getTeacherByIDURL(this.props.match.params.teacher_id))\r\n        const {\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            assigned_classroom,\r\n        } = res.data.data;\r\n        this.setState({\r\n            teacher_item: res.data.data,\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            assigned_classroom,\r\n        })\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onEditTeacher = (e) => {\r\n        const {\r\n            name,\r\n            phone_number,\r\n            dob,\r\n            address,\r\n            assigned_classroom,\r\n            teacher_item\r\n        } = this.state;\r\n\r\n        teacher_item.name = name;\r\n        teacher_item.phone_number = phone_number;\r\n        teacher_item.dob = dob;\r\n        teacher_item.address = address;\r\n        teacher_item.assigned_classroom = assigned_classroom;\r\n\r\n        this.props.editTeacher(teacher_item)\r\n\r\n        this.setState({\r\n            name: \"\",\r\n            phone_number: \"\",\r\n            dob: \"\",\r\n            address: \"\",\r\n            assigned_classroom: \"\",\r\n            student_item: {}\r\n        }, () => {\r\n            //this.props.history.push(\"/teachers\");\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const {class_name, name, dob, phone_number, address} = this.state;\r\n\r\n        const classItems = this.props.classes.map((classItem, index) => {\r\n            if (classItem.class_name === class_name){\r\n                return <option key={classItem._id} defaultValue selected value={classItem.class_name}>\r\n                    {classItem.class_name}\r\n                </option>\r\n            }\r\n            return <option key={classItem._id} value={classItem.class_name}>\r\n                {classItem.class_name}\r\n            </option>\r\n        })\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <h1>Edit Teacher Form</h1>\r\n                <MessageAlert/>\r\n\r\n                <form onSubmit={this.onEditTeacher} method=\"POST\">\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Name:</label>\r\n                        <input required className=\"form-control\" placeholder=\"Name\" type=\"text\" id=\"name\" name=\"name\" onChange={this.onChange} value={name}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Phone Number:</label>\r\n                        <input required className=\"form-control\" placeholder=\"Phone Number\" type=\"text\" id=\"phone_number\" name=\"phone_number\" onChange={this.onChange} value={phone_number}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Date of Birth:</label>\r\n                        <input required className=\"form-control\" type=\"date\" id=\"dob\" name=\"dob\" onChange={this.onChange}value={dob}/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Address:</label>\r\n                        <textarea className=\"form-control\" placeholder=\"Address\" id=\"address\" name=\"address\" value={address} onChange={this.onChange}></textarea>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Assigned Classroom:</label>\r\n                        <select required className=\"custom-select\" id=\"assigned_classroom\" onChange={this.onChange}>\r\n                            {classItems}\r\n                        </select>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Update Teacher</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        classes: state.classReducer.classes\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        editTeacher: (updatedTeacher) => {dispatch(editTeacher(updatedTeacher))},\r\n        getAllClasses: () => {dispatch(getAllClasses())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(EditTeacherForm);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {getAllTeachers} from \"../../actions/teacherActions\";\r\nimport TeacherItem from \"./TeacherItem\";\r\nimport {Link} from \"react-router-dom\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\n\r\nclass TeacherList extends Component {\r\n\r\n    async componentDidMount(){\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id)\r\n\r\n        if (user == null || user.role != \"admin\"){\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        if (user.role == \"student\") {\r\n            this.props.history.push(`/students/details/${user_id}`);\r\n        }\r\n\r\n        if (user.role == \"teacher\") {\r\n            this.props.history.push(`/teachers/details/${user_id}`);\r\n        }\r\n\r\n        this.props.getAllTeachers()\r\n    }\r\n\r\n    render() {\r\n        const teacherList = this.props.teachers.map(teacherItem => {\r\n            return <TeacherItem teacherItem={teacherItem}/>\r\n        })\r\n\r\n        return (\r\n            <div className=\"container\">\r\n                <Link to=\"/teachers/add\" className=\"btn btn-primary\">Add Teacher</Link>\r\n                <ul className=\"list-group\">\r\n                    {teacherList}\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        teachers: state.teacherReducer.teachers\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAllTeachers: () => {dispatch(getAllTeachers())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(TeacherList);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {teacherLogin} from \"../../actions/teacherActions\";\r\nimport MessageAlert from \"../partial/MessageAlert\";\r\n\r\nclass TeacherLoginForm extends Component {\r\n\r\n    state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem(\"token\") === undefined){\r\n            this.props.history.push(\"/logout\")\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onTeacherLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        const {email, password} = this.state;\r\n\r\n        this.props.teacherLogin({\r\n            email, password\r\n        })\r\n\r\n        setTimeout(() => {\r\n            if (localStorage.getItem(\"token\") != undefined){\r\n                this.props.history.push(`/teachers/details/${localStorage.getItem(\"user_id\")}`)\r\n                window.location.reload();\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container login-container\">\r\n                <h1>Teacher Login</h1>\r\n                <MessageAlert/>\r\n\r\n                <form onSubmit={this.onTeacherLogin} method=\"POST\">\r\n                \r\n                    <div className=\"form-group\">\r\n                        <label>Email:</label>\r\n                        <input className=\"form-control\" type=\"email\" placeholder=\"Email\" id=\"email\" name=\"email\" onChange={this.onChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password:</label>\r\n                        <input className=\"form-control\" type=\"password\" placeholder=\"Password\" id=\"password\" name=\"password\" onChange={this.onChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Login</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        teacherLogin: (teacherAccount) => {dispatch(teacherLogin(teacherAccount))}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(TeacherLoginForm);\r\n","import React, { Component } from 'react';\r\nimport axios from \"axios\";\r\nimport {getTeacherByIDURL} from \"../../config/routes\";\r\nimport {userGetter} from \"../../utils/userGetter\";\r\n\r\nclass TeacherDetail extends Component {\r\n\r\n    state = {\r\n        teacher_item: {}\r\n    }\r\n\r\n    async componentDidMount(){\r\n        let user_id = localStorage.getItem(\"user_id\");\r\n        let user = await userGetter(user_id)\r\n\r\n        if (user.role == \"student\") {\r\n            this.props.history.push(`/students/details/${user_id}`);\r\n        }\r\n\r\n        console.log(user)\r\n\r\n        if (user == null || user.role !== \"admin\" & user.role !== \"teacher\"){\r\n            this.props.history.push(\"/\");\r\n        }\r\n\r\n        const res = await axios.get(getTeacherByIDURL(this.props.match.params.teacher_id))\r\n        this.setState({\r\n            teacher_item: res.data.data\r\n        })\r\n    }\r\n\r\n    render() {\r\n        const {name, dob, email, assigned_classroom, phone_number, address, created_date} = this.state.teacher_item\r\n\r\n        return (\r\n            <div className=\"container detail-container\">\r\n                <h1 className=\"text-center\">{name}</h1>\r\n\r\n                <div className=\"row\">\r\n                    <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                        <ul>\r\n                            <li>\r\n                                <b>Date of Birth: </b>{dob}\r\n                            </li>\r\n                            <li>\r\n                                <b>Email: </b>{email}\r\n                            </li>\r\n                            <li>\r\n                                <b>Assigned Classroom: </b>{assigned_classroom}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n\r\n                    <div className=\"col-lg-6 col-md-6 col-sm-12\">\r\n                        <ul>\r\n                            <li>\r\n                                <b>Phone Number: </b>{phone_number}\r\n                            </li>\r\n                            <li>\r\n                                <b>Address: </b>{address}\r\n                            </li>\r\n                            <li>\r\n                                <b>Enrolled Date: </b>{created_date}\r\n                            </li>\r\n                        </ul>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default TeacherDetail;\r\n","import {\r\n    GET_ALL_ADMINS,\r\n    GET_ADMIN_BY_ID,\r\n    EDIT_ADMIN,\r\n    ADD_ADMIN,\r\n    SET_MESSAGE,\r\n    USER_LOGIN\r\n} from \"../actions/types\";\r\nimport axios from \"axios\";\r\nimport {\r\n    allAdminsURL,\r\n    addAdminURL,\r\n    getAdminByIDURL,\r\n    getEditAdminURL,\r\n    adminLoginURL\r\n} from \"../config/routes\";\r\n\r\nexport const getAllAdmins = () => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(allAdminsURL)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const admins = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_ALL_ADMINS,\r\n                payload: {\r\n                    admins,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const getAdminByID = (admin_id) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.get(getAdminByIDURL(admin_id))\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const admin = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: GET_ADMIN_BY_ID,\r\n                payload: {\r\n                    admin,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const addAdmin = (newAdmin) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post(addAdminURL, newAdmin)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const admin = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: ADD_ADMIN,\r\n                payload: {\r\n                    admin,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const editAdmin = (updatedAdmin) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.put(getEditAdminURL(updatedAdmin._id), updatedAdmin)\r\n            const {\r\n                data,\r\n                success,\r\n                message\r\n            } = res.data;\r\n            const admin = data;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message,\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: EDIT_ADMIN,\r\n                payload: {\r\n                    admin,\r\n                    message,\r\n                    msg_type: \"success\"\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n\r\nexport const adminLogin = (adminAccount) => {\r\n    return async (dispatch) => {\r\n        try {\r\n            const res = await axios.post(adminLoginURL, adminAccount)\r\n            const {\r\n                data,\r\n                success,\r\n                message,\r\n            } = res.data;\r\n            const {token} = res.data;\r\n            const user_id = data._id;\r\n\r\n            if (success === false) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message: \"Wrong email or password\",\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            if (data === null) {\r\n                return dispatch({\r\n                    type: SET_MESSAGE,\r\n                    payload: {\r\n                        message: \"Wrong email or password\",\r\n                        msg_type: \"danger\"\r\n                    }\r\n                })\r\n            }\r\n\r\n            return dispatch({\r\n                type: USER_LOGIN,\r\n                payload: {\r\n                    user_id,\r\n                    token,\r\n                    date: Date.now()\r\n                }\r\n            })\r\n        } catch (error) {\r\n            return dispatch({\r\n                type: SET_MESSAGE,\r\n                payload: {\r\n                    message: error.response.data.message,\r\n                    msg_type: \"danger\"\r\n                }\r\n            })\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport {Link} from \"react-router-dom\";\r\n\r\nclass AdminItem extends Component {\r\n    render() {\r\n        const {adminItem} = this.props\r\n        \r\n        return (\r\n            <div>\r\n                <h4>{adminItem.email}</h4>\r\n                <h5>{adminItem.verified}</h5>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default AdminItem;\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {getAllAdmins} from \"../../actions/adminActions\";\r\nimport AdminItem from \"./AdminItem\";\r\n\r\nclass AdminList extends Component {\r\n\r\n    componentDidMount(){\r\n        this.props.getAllAdmins()\r\n    }\r\n\r\n    render() {\r\n        const adminList = this.props.admins.map(adminItem => {\r\n            return <AdminItem adminItem={adminItem}/>\r\n        })\r\n\r\n        return (\r\n            <div>\r\n                {adminList}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        admins: state.adminReducer.admins\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        getAllAdmins: () => {dispatch(getAllAdmins())}\r\n    }\r\n}\r\n\r\nexport default connect(mapStateToProps, mapDispatchToProps)(AdminList);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {adminLogin} from \"../../actions/adminActions\";\r\nimport MessageAlert from \"../partial/MessageAlert\";\r\n\r\nclass AdminLoginForm extends Component {\r\n\r\n    state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    componentDidMount() {\r\n        if (localStorage.getItem(\"token\") === undefined){\r\n            this.props.history.push(\"/logout\")\r\n        }\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onAdminLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        const {email, password} = this.state;\r\n\r\n        this.props.adminLogin({\r\n            email, password\r\n        })\r\n\r\n        setTimeout(() => {\r\n            if (localStorage.getItem(\"token\") != undefined){\r\n                this.props.history.push(`/classes`)\r\n                window.location.reload();\r\n            }\r\n        }, 1000)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container login-container\">\r\n                <h1>Admin Login</h1>\r\n                <MessageAlert/>\r\n\r\n                <form onSubmit={this.onAdminLogin} method=\"POST\">\r\n                \r\n                    <div className=\"form-group\">\r\n                        <label>Email:</label>\r\n                        <input className=\"form-control\" type=\"email\" placeholder=\"Email\" id=\"email\" name=\"email\" onChange={this.onChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password:</label>\r\n                        <input className=\"form-control\" type=\"password\" placeholder=\"Password\" id=\"password\" name=\"password\" onChange={this.onChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Login</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        adminLogin: (adminAccount) => {dispatch(adminLogin(adminAccount))}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AdminLoginForm);\r\n","import React, { Component } from 'react';\r\nimport {connect} from \"react-redux\";\r\nimport {adminLogin, addAdmin} from \"../../actions/adminActions\";\r\n\r\nclass AdminSignUpForm extends Component {\r\n\r\n    state = {\r\n        email: \"\",\r\n        password: \"\"\r\n    }\r\n\r\n    onChange = (e) => {\r\n        this.setState({\r\n            [e.target.id]: e.target.value\r\n        })\r\n    }\r\n\r\n    onAdminLogin = (e) => {\r\n        e.preventDefault()\r\n\r\n        const {email, password} = this.state;\r\n\r\n        this.props.addAdmin({\r\n            email, password\r\n        })\r\n\r\n        this.props.adminAccount({\r\n            email, password\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <form onSubmit={this.onAdminLogin} method=\"POST\">\r\n                \r\n                    <div className=\"form-group\">\r\n                        <label>Email:</label>\r\n                        <input className=\"form-control\" type=\"email\" placeholder=\"Email\" id=\"email\" name=\"email\" onChange={this.onChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <label>Password:</label>\r\n                        <input className=\"form-control\" type=\"password\" placeholder=\"Password\" id=\"password\" name=\"password\" onChange={this.onChange} required/>\r\n                    </div>\r\n\r\n                    <div className=\"form-group\">\r\n                        <button type=\"submit\" className=\"btn btn-primary btn-block\">Sign Up</button>\r\n                    </div>\r\n\r\n                </form>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        adminLogin: (adminAccount) => {dispatch(adminLogin(adminAccount))},\r\n        addAdmin: (newAdmin) => {dispatch(addAdmin(newAdmin))}\r\n    }\r\n}\r\n\r\nexport default connect(null, mapDispatchToProps)(AdminSignUpForm);\r\n","import React from 'react';\nimport {BrowserRouter as Router, Route, Switch} from \"react-router-dom\";\n\nimport Navbar from \"./components/partial/Navbar\";\nimport Logout from \"./components/partial/Logout\";\nimport Home from \"./components/main/Home\";\n\nimport AddClassForm from \"./components/class/AddClassForm\";\nimport ClassList from \"./components/class/ListOfClasses\";\nimport EditClassForm from \"./components/class/EditClassForm\";\nimport ClassDetail from \"./components/class/ClassDetail\";\n\nimport AddStudentForm from \"./components/student/AddStudentForm\";\nimport EditStudentForm from \"./components/student/EditStudentForm\";\nimport StudentList from \"./components/student/StudentList\";\nimport StudentLoginForm from \"./components/student/StudentLoginForm\";\nimport StudentDetails from \"./components/student/StudentDetail\";\n\nimport AddTeacherForm from \"./components/teacher/AddTeacherForm\";\nimport EditTeacherForm from \"./components/teacher/EditTeacherForm\";\nimport TeacherList from \"./components/teacher/TeacherList\";\nimport TeacherLoginForm from \"./components/teacher/TeacherLoginForm\";\nimport TeacherDetail from \"./components/teacher/TeacherDetail\";\n\nimport AdminList from \"./components/admin/AdminList\";\nimport AdminLoginForm from \"./components/admin/AdminLoginForm\";\nimport AdminSignUpForm from \"./components/admin/AdminSignUpForm\";\n\nfunction App() {\n\n  return (\n    <div className=\"App\">\n      <Router>\n        <Navbar/>\n        <Switch>\n\n          <Route path=\"/classes/edit/:class_name\" component={EditClassForm}/>\n          <Route path=\"/classes\" exact component={ClassList}/>\n          <Route path=\"/classes/add\" component={AddClassForm}/>\n          <Route path=\"/classes/details/:class_name\" component={ClassDetail}/>\n\n          <Route path=\"/admins\" exact component={AdminList}/>\n          <Route path=\"/admins/login\" component={AdminLoginForm}/>\n          <Route path=\"/admins/signup\" component={AdminSignUpForm}/>\n          \n          <Route path=\"/students\" exact component={StudentList}/>\n          <Route path=\"/students/edit/:student_id\" component={EditStudentForm}/>\n          <Route path=\"/students/add\" component={AddStudentForm}/>\n          <Route path=\"/students/login\" component={StudentLoginForm}/>\n          <Route path=\"/students/details/:student_id\" component={StudentDetails}/>\n\n          <Route path=\"/teachers\" exact component={TeacherList}/>\n          <Route path=\"/teachers/edit/:teacher_id\" component={EditTeacherForm}/>\n          <Route path=\"/teachers/add\" component={AddTeacherForm}/>\n          <Route path=\"/teachers/login\" component={TeacherLoginForm}/>\n          <Route path=\"/teachers/details/:teacher_id\" component={TeacherDetail}/>\n\n          <Route path=\"/logout\" component={Logout}/>\n          <Route path=\"/\" exact component={Home}/>\n        </Switch>\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import {\r\n    ADD_ADMIN,\r\n    EDIT_ADMIN,\r\n    GET_ADMIN_BY_ID,\r\n    GET_ALL_ADMINS\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    admins: [],\r\n    admin: {}\r\n}\r\n\r\nconst adminReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_ADMIN:\r\n            return {\r\n                ...state,\r\n                admins: [...state.admins, action.payload.admin]\r\n            };\r\n            break;\r\n        case EDIT_ADMIN:\r\n            return {\r\n                ...state,\r\n                admins: state.admins.map(admin => {\r\n                    if (admin._id === action.payload.admin._id) {\r\n                        return action.payload.admin\r\n                    }\r\n                    return admin;\r\n                })\r\n            };\r\n        case GET_ALL_ADMINS:\r\n            return {\r\n                ...state,\r\n                admins: action.payload.admins\r\n            }\r\n            break;\r\n        case GET_ADMIN_BY_ID:\r\n            return {\r\n                ...state,\r\n                admin: action.payload.admin\r\n            }\r\n            default:\r\n                return state;\r\n                break;\r\n    }\r\n}\r\n\r\nexport default adminReducer;","import {\r\n    SET_MESSAGE,\r\n    CLEAR_MESSAGE\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    message: null,\r\n    msg_type: \"\"\r\n}\r\n\r\nconst messageReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: action.payload.message,\r\n                msg_type: action.payload.msg_type\r\n            };\r\n            break;\r\n        case CLEAR_MESSAGE:\r\n            return {\r\n                ...state,\r\n                message: null,\r\n                msg_type: \"\"\r\n            };\r\n            break;\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n}\r\n\r\nexport default messageReducer;","import {\r\n    ADD_STUDENT,\r\n    DELETE_STUDENT,\r\n    EDIT_STUDENT,\r\n    GET_ALL_STUDENTS,\r\n    GET_STUDENTS_BY_NAME,\r\n    GET_STUDENT_BY_ID\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    students: [],\r\n    student: {}\r\n}\r\n\r\nconst studentReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_ALL_STUDENTS:\r\n            return {\r\n                ...state,\r\n                students: action.payload.students\r\n            };\r\n            break;\r\n        case GET_STUDENT_BY_ID:\r\n            return {\r\n                ...state,\r\n                student: action.payload.student\r\n            };\r\n            break;\r\n        case GET_STUDENTS_BY_NAME:\r\n            return {\r\n                ...state,\r\n                students: action.payload.students\r\n            };\r\n            break;\r\n        case ADD_STUDENT:\r\n            return {\r\n                ...state,\r\n                students: [...state.students, action.payload.student]\r\n            };\r\n            break;\r\n        case EDIT_STUDENT:\r\n            return {\r\n                ...state,\r\n                students: state.students.map(student => {\r\n                    if (student._id === action.payload.student._id) {\r\n                        return action.payload.student\r\n                    }\r\n                    return student;\r\n                })\r\n            };\r\n            break;\r\n        case DELETE_STUDENT:\r\n            return {\r\n                ...state,\r\n                students: state.students.filter(student => {\r\n                    return student._id !== action.payload.student._id\r\n                })\r\n            };\r\n            break;\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n}\r\n\r\nexport default studentReducer;","import {\r\n    ADD_TEACHER,\r\n    DELETE_TEACHER,\r\n    EDIT_TEACHER,\r\n    GET_ALL_TEACHERS,\r\n    GET_TEACHERS_BY_NAME,\r\n    GET_TEACHER_BY_ID\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    teachers: [],\r\n    teacher: {}\r\n}\r\n\r\nconst teacherReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case GET_ALL_TEACHERS:\r\n            return {\r\n                ...state,\r\n                teachers: action.payload.teachers\r\n            };\r\n            break;\r\n        case GET_TEACHER_BY_ID:\r\n            return {\r\n                ...state,\r\n                teacher: action.payload.teacher\r\n            };\r\n            break;\r\n        case GET_TEACHERS_BY_NAME:\r\n            return {\r\n                ...state,\r\n                teachers: action.payload.teachers\r\n            };\r\n            break;\r\n        case ADD_TEACHER:\r\n            return {\r\n                ...state,\r\n                teachers: [...state.teachers, action.payload.teacher]\r\n            };\r\n            break;\r\n        case EDIT_TEACHER:\r\n            return {\r\n                ...state,\r\n                teachers: state.teachers.map(teacher => {\r\n                    if (teacher._id === action.payload.teacher._id) {\r\n                        return action.payload.teacher\r\n                    }\r\n                    return teacher;\r\n                })\r\n            };\r\n            break;\r\n        case DELETE_TEACHER:\r\n            return {\r\n                ...state,\r\n                teachers: state.teachers.filter(teacher => {\r\n                    return teacher._id !== action.payload.teacher._id\r\n                })\r\n            };\r\n            break;\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n}\r\n\r\nexport default teacherReducer;","import {\r\n    USER_LOGIN,\r\n    USER_LOGOUT\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    token: null,\r\n    date: null,\r\n    user_id: \"\"\r\n}\r\n\r\n\r\nconst userReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case USER_LOGIN:\r\n            localStorage.setItem(\"token\", action.payload.token)\r\n            localStorage.setItem(\"date\", action.payload.date)\r\n            localStorage.setItem(\"user_id\", action.payload.user_id)\r\n            return {\r\n                ...state,\r\n                token: localStorage.getItem(\"token\"),\r\n                date: localStorage.getItem(\"date\"),\r\n                user_id: localStorage.getItem(\"user_id\")\r\n            };\r\n            break;\r\n        case USER_LOGOUT:\r\n            localStorage.removeItem(\"token\")\r\n            localStorage.removeItem(\"date\")\r\n            localStorage.removeItem(\"user_id\")\r\n            return {\r\n                ...state,\r\n                token: null,\r\n                date: null,\r\n                user_id: null\r\n            };\r\n            break;\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n}\r\n\r\nexport default userReducer;","import {\r\n    ADD_CLASS,\r\n    DELETE_CLASS,\r\n    EDIT_CLASS,\r\n    GET_ALL_CLASSES,\r\n    GET_CLASSES_BY_NAME,\r\n    GET_CLASS_BY_ID\r\n} from \"../actions/types\";\r\n\r\nconst initialState = {\r\n    classes: [],\r\n    classItem: {}\r\n}\r\n\r\nconst classReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_CLASS:\r\n            return {\r\n                ...state,\r\n                classes: state.classes.concat(action.payload.classItem)\r\n            };\r\n            break;\r\n        case EDIT_CLASS:\r\n            return {\r\n                ...state,\r\n                classes: state.classes.map(classItem => {\r\n                    if (classItem._id === action.payload.classItem._id) {\r\n                        return action.payload.classItem\r\n                    }\r\n                    return classItem;\r\n                })\r\n            };\r\n        case GET_ALL_CLASSES:\r\n            return {\r\n                ...state,\r\n                classes: action.payload.classes\r\n            }\r\n            break;\r\n        case GET_CLASS_BY_ID:\r\n            return {\r\n                ...state,\r\n                classItem: action.payload.classItem\r\n            }\r\n            break;\r\n        case GET_CLASSES_BY_NAME:\r\n            return {\r\n                ...state,\r\n                classes: action.payload.classes\r\n            }\r\n            break;\r\n        case DELETE_CLASS:\r\n            return {\r\n                ...state,\r\n                classes: state.classes.filter(classItem => {\r\n                    return classItem._id !== action.payload.deletedClassID\r\n                })\r\n            }\r\n            break;\r\n        default:\r\n            return state;\r\n            break;\r\n    }\r\n}\r\n\r\nexport default classReducer;","import adminReducer from \"./adminReducer\";\r\nimport messageReducer from \"./messageReducer\";\r\nimport studentReducer from \"./studentReducer\";\r\nimport teacherReducer from \"./teacherReducer\";\r\nimport userReducer from \"./userReducer\";\r\nimport classReducer from \"./classReducer\";\r\nimport {combineReducers} from \"redux\";\r\n\r\nconst rootReducer = combineReducers({\r\n    adminReducer,\r\n    messageReducer,\r\n    studentReducer,\r\n    teacherReducer,\r\n    userReducer,\r\n    classReducer\r\n})\r\n\r\nexport default rootReducer;","import {createStore, applyMiddleware, compose} from \"redux\";\r\nimport thunk from \"redux-thunk\";\r\nimport rootReducer from \"../reducers/rootReducer\";\r\n\r\nconst store = createStore(rootReducer, compose(applyMiddleware(\r\n    thunk),\r\n    window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\r\n))\r\n\r\nexport default store;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"popper.js/dist/popper\";\nimport \"jquery/dist/jquery\";\nimport \"bootstrap/dist/css/bootstrap.css\";\nimport \"bootstrap/dist/js/bootstrap\";\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from \"./config/store\";\nimport {Provider} from \"react-redux\";\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}